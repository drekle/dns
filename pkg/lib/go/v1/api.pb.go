// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Header struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Ttl                  uint32   `protobuf:"varint,2,opt,name=ttl" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{0}
}
func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (dst *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(dst, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Header) GetTtl() uint32 {
	if m != nil {
		return m.Ttl
	}
	return 0
}

type A struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *A) Reset()         { *m = A{} }
func (m *A) String() string { return proto.CompactTextString(m) }
func (*A) ProtoMessage()    {}
func (*A) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{1}
}
func (m *A) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_A.Unmarshal(m, b)
}
func (m *A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_A.Marshal(b, m, deterministic)
}
func (dst *A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_A.Merge(dst, src)
}
func (m *A) XXX_Size() int {
	return xxx_messageInfo_A.Size(m)
}
func (m *A) XXX_DiscardUnknown() {
	xxx_messageInfo_A.DiscardUnknown(m)
}

var xxx_messageInfo_A proto.InternalMessageInfo

func (m *A) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AAAA struct {
	Address              string   `protobuf:"bytes,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AAAA) Reset()         { *m = AAAA{} }
func (m *AAAA) String() string { return proto.CompactTextString(m) }
func (*AAAA) ProtoMessage()    {}
func (*AAAA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{2}
}
func (m *AAAA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AAAA.Unmarshal(m, b)
}
func (m *AAAA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AAAA.Marshal(b, m, deterministic)
}
func (dst *AAAA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AAAA.Merge(dst, src)
}
func (m *AAAA) XXX_Size() int {
	return xxx_messageInfo_AAAA.Size(m)
}
func (m *AAAA) XXX_DiscardUnknown() {
	xxx_messageInfo_AAAA.DiscardUnknown(m)
}

var xxx_messageInfo_AAAA proto.InternalMessageInfo

func (m *AAAA) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type AFSDB struct {
	Subtype              uint32   `protobuf:"varint,1,opt,name=subtype" json:"subtype,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AFSDB) Reset()         { *m = AFSDB{} }
func (m *AFSDB) String() string { return proto.CompactTextString(m) }
func (*AFSDB) ProtoMessage()    {}
func (*AFSDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{3}
}
func (m *AFSDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AFSDB.Unmarshal(m, b)
}
func (m *AFSDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AFSDB.Marshal(b, m, deterministic)
}
func (dst *AFSDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AFSDB.Merge(dst, src)
}
func (m *AFSDB) XXX_Size() int {
	return xxx_messageInfo_AFSDB.Size(m)
}
func (m *AFSDB) XXX_DiscardUnknown() {
	xxx_messageInfo_AFSDB.DiscardUnknown(m)
}

var xxx_messageInfo_AFSDB proto.InternalMessageInfo

func (m *AFSDB) GetSubtype() uint32 {
	if m != nil {
		return m.Subtype
	}
	return 0
}

func (m *AFSDB) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type AVC struct {
	Txt                  []string `protobuf:"bytes,1,rep,name=txt" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AVC) Reset()         { *m = AVC{} }
func (m *AVC) String() string { return proto.CompactTextString(m) }
func (*AVC) ProtoMessage()    {}
func (*AVC) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{4}
}
func (m *AVC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AVC.Unmarshal(m, b)
}
func (m *AVC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AVC.Marshal(b, m, deterministic)
}
func (dst *AVC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AVC.Merge(dst, src)
}
func (m *AVC) XXX_Size() int {
	return xxx_messageInfo_AVC.Size(m)
}
func (m *AVC) XXX_DiscardUnknown() {
	xxx_messageInfo_AVC.DiscardUnknown(m)
}

var xxx_messageInfo_AVC proto.InternalMessageInfo

func (m *AVC) GetTxt() []string {
	if m != nil {
		return m.Txt
	}
	return nil
}

type CAA struct {
	Flag                 uint32   `protobuf:"varint,1,opt,name=flag" json:"flag,omitempty"`
	Tag                  string   `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	Value                string   `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CAA) Reset()         { *m = CAA{} }
func (m *CAA) String() string { return proto.CompactTextString(m) }
func (*CAA) ProtoMessage()    {}
func (*CAA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{5}
}
func (m *CAA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CAA.Unmarshal(m, b)
}
func (m *CAA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CAA.Marshal(b, m, deterministic)
}
func (dst *CAA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CAA.Merge(dst, src)
}
func (m *CAA) XXX_Size() int {
	return xxx_messageInfo_CAA.Size(m)
}
func (m *CAA) XXX_DiscardUnknown() {
	xxx_messageInfo_CAA.DiscardUnknown(m)
}

var xxx_messageInfo_CAA proto.InternalMessageInfo

func (m *CAA) GetFlag() uint32 {
	if m != nil {
		return m.Flag
	}
	return 0
}

func (m *CAA) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *CAA) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CDNSKEY struct {
	Flags                uint32   `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	Algorithm            uint32   `protobuf:"varint,3,opt,name=algorithm" json:"algorithm,omitempty"`
	PublicKey            string   `protobuf:"bytes,4,opt,name=publicKey" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDNSKEY) Reset()         { *m = CDNSKEY{} }
func (m *CDNSKEY) String() string { return proto.CompactTextString(m) }
func (*CDNSKEY) ProtoMessage()    {}
func (*CDNSKEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{6}
}
func (m *CDNSKEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDNSKEY.Unmarshal(m, b)
}
func (m *CDNSKEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDNSKEY.Marshal(b, m, deterministic)
}
func (dst *CDNSKEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDNSKEY.Merge(dst, src)
}
func (m *CDNSKEY) XXX_Size() int {
	return xxx_messageInfo_CDNSKEY.Size(m)
}
func (m *CDNSKEY) XXX_DiscardUnknown() {
	xxx_messageInfo_CDNSKEY.DiscardUnknown(m)
}

var xxx_messageInfo_CDNSKEY proto.InternalMessageInfo

func (m *CDNSKEY) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *CDNSKEY) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *CDNSKEY) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *CDNSKEY) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type CDS struct {
	KeyTag               uint32   `protobuf:"varint,1,opt,name=keyTag" json:"keyTag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	DigestType           uint32   `protobuf:"varint,3,opt,name=digestType" json:"digestType,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CDS) Reset()         { *m = CDS{} }
func (m *CDS) String() string { return proto.CompactTextString(m) }
func (*CDS) ProtoMessage()    {}
func (*CDS) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{7}
}
func (m *CDS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CDS.Unmarshal(m, b)
}
func (m *CDS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CDS.Marshal(b, m, deterministic)
}
func (dst *CDS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CDS.Merge(dst, src)
}
func (m *CDS) XXX_Size() int {
	return xxx_messageInfo_CDS.Size(m)
}
func (m *CDS) XXX_DiscardUnknown() {
	xxx_messageInfo_CDS.DiscardUnknown(m)
}

var xxx_messageInfo_CDS proto.InternalMessageInfo

func (m *CDS) GetKeyTag() uint32 {
	if m != nil {
		return m.KeyTag
	}
	return 0
}

func (m *CDS) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *CDS) GetDigestType() uint32 {
	if m != nil {
		return m.DigestType
	}
	return 0
}

func (m *CDS) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

type CERT struct {
	KeyTag               uint32   `protobuf:"varint,1,opt,name=keyTag" json:"keyTag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	Certificate          string   `protobuf:"bytes,3,opt,name=certificate" json:"certificate,omitempty"`
	Type                 uint32   `protobuf:"varint,4,opt,name=type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CERT) Reset()         { *m = CERT{} }
func (m *CERT) String() string { return proto.CompactTextString(m) }
func (*CERT) ProtoMessage()    {}
func (*CERT) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{8}
}
func (m *CERT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CERT.Unmarshal(m, b)
}
func (m *CERT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CERT.Marshal(b, m, deterministic)
}
func (dst *CERT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CERT.Merge(dst, src)
}
func (m *CERT) XXX_Size() int {
	return xxx_messageInfo_CERT.Size(m)
}
func (m *CERT) XXX_DiscardUnknown() {
	xxx_messageInfo_CERT.DiscardUnknown(m)
}

var xxx_messageInfo_CERT proto.InternalMessageInfo

func (m *CERT) GetKeyTag() uint32 {
	if m != nil {
		return m.KeyTag
	}
	return 0
}

func (m *CERT) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *CERT) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

func (m *CERT) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type CNAME struct {
	Target               string   `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CNAME) Reset()         { *m = CNAME{} }
func (m *CNAME) String() string { return proto.CompactTextString(m) }
func (*CNAME) ProtoMessage()    {}
func (*CNAME) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{9}
}
func (m *CNAME) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CNAME.Unmarshal(m, b)
}
func (m *CNAME) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CNAME.Marshal(b, m, deterministic)
}
func (dst *CNAME) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CNAME.Merge(dst, src)
}
func (m *CNAME) XXX_Size() int {
	return xxx_messageInfo_CNAME.Size(m)
}
func (m *CNAME) XXX_DiscardUnknown() {
	xxx_messageInfo_CNAME.DiscardUnknown(m)
}

var xxx_messageInfo_CNAME proto.InternalMessageInfo

func (m *CNAME) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type CSYNC struct {
	Serial               uint32   `protobuf:"varint,1,opt,name=serial" json:"serial,omitempty"`
	Flags                uint32   `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	TypeBitMap           []uint32 `protobuf:"varint,3,rep,packed,name=typeBitMap" json:"typeBitMap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSYNC) Reset()         { *m = CSYNC{} }
func (m *CSYNC) String() string { return proto.CompactTextString(m) }
func (*CSYNC) ProtoMessage()    {}
func (*CSYNC) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{10}
}
func (m *CSYNC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSYNC.Unmarshal(m, b)
}
func (m *CSYNC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSYNC.Marshal(b, m, deterministic)
}
func (dst *CSYNC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSYNC.Merge(dst, src)
}
func (m *CSYNC) XXX_Size() int {
	return xxx_messageInfo_CSYNC.Size(m)
}
func (m *CSYNC) XXX_DiscardUnknown() {
	xxx_messageInfo_CSYNC.DiscardUnknown(m)
}

var xxx_messageInfo_CSYNC proto.InternalMessageInfo

func (m *CSYNC) GetSerial() uint32 {
	if m != nil {
		return m.Serial
	}
	return 0
}

func (m *CSYNC) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *CSYNC) GetTypeBitMap() []uint32 {
	if m != nil {
		return m.TypeBitMap
	}
	return nil
}

type DHCID struct {
	Digest               string   `protobuf:"bytes,1,opt,name=digest" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DHCID) Reset()         { *m = DHCID{} }
func (m *DHCID) String() string { return proto.CompactTextString(m) }
func (*DHCID) ProtoMessage()    {}
func (*DHCID) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{11}
}
func (m *DHCID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DHCID.Unmarshal(m, b)
}
func (m *DHCID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DHCID.Marshal(b, m, deterministic)
}
func (dst *DHCID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DHCID.Merge(dst, src)
}
func (m *DHCID) XXX_Size() int {
	return xxx_messageInfo_DHCID.Size(m)
}
func (m *DHCID) XXX_DiscardUnknown() {
	xxx_messageInfo_DHCID.DiscardUnknown(m)
}

var xxx_messageInfo_DHCID proto.InternalMessageInfo

func (m *DHCID) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

type DLV struct {
	KeyTag               uint32   `protobuf:"varint,1,opt,name=keyTag" json:"keyTag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	DigestType           uint32   `protobuf:"varint,3,opt,name=digestType" json:"digestType,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DLV) Reset()         { *m = DLV{} }
func (m *DLV) String() string { return proto.CompactTextString(m) }
func (*DLV) ProtoMessage()    {}
func (*DLV) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{12}
}
func (m *DLV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DLV.Unmarshal(m, b)
}
func (m *DLV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DLV.Marshal(b, m, deterministic)
}
func (dst *DLV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DLV.Merge(dst, src)
}
func (m *DLV) XXX_Size() int {
	return xxx_messageInfo_DLV.Size(m)
}
func (m *DLV) XXX_DiscardUnknown() {
	xxx_messageInfo_DLV.DiscardUnknown(m)
}

var xxx_messageInfo_DLV proto.InternalMessageInfo

func (m *DLV) GetKeyTag() uint32 {
	if m != nil {
		return m.KeyTag
	}
	return 0
}

func (m *DLV) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *DLV) GetDigestType() uint32 {
	if m != nil {
		return m.DigestType
	}
	return 0
}

func (m *DLV) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

type DNAME struct {
	Target               string   `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNAME) Reset()         { *m = DNAME{} }
func (m *DNAME) String() string { return proto.CompactTextString(m) }
func (*DNAME) ProtoMessage()    {}
func (*DNAME) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{13}
}
func (m *DNAME) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNAME.Unmarshal(m, b)
}
func (m *DNAME) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNAME.Marshal(b, m, deterministic)
}
func (dst *DNAME) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNAME.Merge(dst, src)
}
func (m *DNAME) XXX_Size() int {
	return xxx_messageInfo_DNAME.Size(m)
}
func (m *DNAME) XXX_DiscardUnknown() {
	xxx_messageInfo_DNAME.DiscardUnknown(m)
}

var xxx_messageInfo_DNAME proto.InternalMessageInfo

func (m *DNAME) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type DNSKEY struct {
	Flags                uint32   `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	Algorithm            uint32   `protobuf:"varint,3,opt,name=algorithm" json:"algorithm,omitempty"`
	PublicKey            string   `protobuf:"bytes,4,opt,name=publicKey" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSKEY) Reset()         { *m = DNSKEY{} }
func (m *DNSKEY) String() string { return proto.CompactTextString(m) }
func (*DNSKEY) ProtoMessage()    {}
func (*DNSKEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{14}
}
func (m *DNSKEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSKEY.Unmarshal(m, b)
}
func (m *DNSKEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSKEY.Marshal(b, m, deterministic)
}
func (dst *DNSKEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSKEY.Merge(dst, src)
}
func (m *DNSKEY) XXX_Size() int {
	return xxx_messageInfo_DNSKEY.Size(m)
}
func (m *DNSKEY) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSKEY.DiscardUnknown(m)
}

var xxx_messageInfo_DNSKEY proto.InternalMessageInfo

func (m *DNSKEY) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *DNSKEY) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *DNSKEY) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *DNSKEY) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type DS struct {
	KeyTag               uint32   `protobuf:"varint,1,opt,name=keyTag" json:"keyTag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	DigestType           uint32   `protobuf:"varint,3,opt,name=digestType" json:"digestType,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DS) Reset()         { *m = DS{} }
func (m *DS) String() string { return proto.CompactTextString(m) }
func (*DS) ProtoMessage()    {}
func (*DS) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{15}
}
func (m *DS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DS.Unmarshal(m, b)
}
func (m *DS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DS.Marshal(b, m, deterministic)
}
func (dst *DS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DS.Merge(dst, src)
}
func (m *DS) XXX_Size() int {
	return xxx_messageInfo_DS.Size(m)
}
func (m *DS) XXX_DiscardUnknown() {
	xxx_messageInfo_DS.DiscardUnknown(m)
}

var xxx_messageInfo_DS proto.InternalMessageInfo

func (m *DS) GetKeyTag() uint32 {
	if m != nil {
		return m.KeyTag
	}
	return 0
}

func (m *DS) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *DS) GetDigestType() uint32 {
	if m != nil {
		return m.DigestType
	}
	return 0
}

func (m *DS) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

type EID struct {
	Endpoint             string   `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EID) Reset()         { *m = EID{} }
func (m *EID) String() string { return proto.CompactTextString(m) }
func (*EID) ProtoMessage()    {}
func (*EID) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{16}
}
func (m *EID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EID.Unmarshal(m, b)
}
func (m *EID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EID.Marshal(b, m, deterministic)
}
func (dst *EID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EID.Merge(dst, src)
}
func (m *EID) XXX_Size() int {
	return xxx_messageInfo_EID.Size(m)
}
func (m *EID) XXX_DiscardUnknown() {
	xxx_messageInfo_EID.DiscardUnknown(m)
}

var xxx_messageInfo_EID proto.InternalMessageInfo

func (m *EID) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

type EUI48 struct {
	Address              uint64   `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EUI48) Reset()         { *m = EUI48{} }
func (m *EUI48) String() string { return proto.CompactTextString(m) }
func (*EUI48) ProtoMessage()    {}
func (*EUI48) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{17}
}
func (m *EUI48) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EUI48.Unmarshal(m, b)
}
func (m *EUI48) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EUI48.Marshal(b, m, deterministic)
}
func (dst *EUI48) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EUI48.Merge(dst, src)
}
func (m *EUI48) XXX_Size() int {
	return xxx_messageInfo_EUI48.Size(m)
}
func (m *EUI48) XXX_DiscardUnknown() {
	xxx_messageInfo_EUI48.DiscardUnknown(m)
}

var xxx_messageInfo_EUI48 proto.InternalMessageInfo

func (m *EUI48) GetAddress() uint64 {
	if m != nil {
		return m.Address
	}
	return 0
}

type EUI64 struct {
	Address              uint64   `protobuf:"varint,1,opt,name=address" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EUI64) Reset()         { *m = EUI64{} }
func (m *EUI64) String() string { return proto.CompactTextString(m) }
func (*EUI64) ProtoMessage()    {}
func (*EUI64) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{18}
}
func (m *EUI64) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EUI64.Unmarshal(m, b)
}
func (m *EUI64) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EUI64.Marshal(b, m, deterministic)
}
func (dst *EUI64) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EUI64.Merge(dst, src)
}
func (m *EUI64) XXX_Size() int {
	return xxx_messageInfo_EUI64.Size(m)
}
func (m *EUI64) XXX_DiscardUnknown() {
	xxx_messageInfo_EUI64.DiscardUnknown(m)
}

var xxx_messageInfo_EUI64 proto.InternalMessageInfo

func (m *EUI64) GetAddress() uint64 {
	if m != nil {
		return m.Address
	}
	return 0
}

type GID struct {
	Gid                  uint32   `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GID) Reset()         { *m = GID{} }
func (m *GID) String() string { return proto.CompactTextString(m) }
func (*GID) ProtoMessage()    {}
func (*GID) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{19}
}
func (m *GID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GID.Unmarshal(m, b)
}
func (m *GID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GID.Marshal(b, m, deterministic)
}
func (dst *GID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GID.Merge(dst, src)
}
func (m *GID) XXX_Size() int {
	return xxx_messageInfo_GID.Size(m)
}
func (m *GID) XXX_DiscardUnknown() {
	xxx_messageInfo_GID.DiscardUnknown(m)
}

var xxx_messageInfo_GID proto.InternalMessageInfo

func (m *GID) GetGid() uint32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

type GPOS struct {
	Latitude             string   `protobuf:"bytes,1,opt,name=latitude" json:"latitude,omitempty"`
	Longitude            string   `protobuf:"bytes,2,opt,name=longitude" json:"longitude,omitempty"`
	Altitude             string   `protobuf:"bytes,3,opt,name=altitude" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GPOS) Reset()         { *m = GPOS{} }
func (m *GPOS) String() string { return proto.CompactTextString(m) }
func (*GPOS) ProtoMessage()    {}
func (*GPOS) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{20}
}
func (m *GPOS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GPOS.Unmarshal(m, b)
}
func (m *GPOS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GPOS.Marshal(b, m, deterministic)
}
func (dst *GPOS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GPOS.Merge(dst, src)
}
func (m *GPOS) XXX_Size() int {
	return xxx_messageInfo_GPOS.Size(m)
}
func (m *GPOS) XXX_DiscardUnknown() {
	xxx_messageInfo_GPOS.DiscardUnknown(m)
}

var xxx_messageInfo_GPOS proto.InternalMessageInfo

func (m *GPOS) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *GPOS) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *GPOS) GetAltitude() string {
	if m != nil {
		return m.Altitude
	}
	return ""
}

type HINFO struct {
	Cpu                  string   `protobuf:"bytes,1,opt,name=cpu" json:"cpu,omitempty"`
	Os                   string   `protobuf:"bytes,2,opt,name=os" json:"os,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HINFO) Reset()         { *m = HINFO{} }
func (m *HINFO) String() string { return proto.CompactTextString(m) }
func (*HINFO) ProtoMessage()    {}
func (*HINFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{21}
}
func (m *HINFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HINFO.Unmarshal(m, b)
}
func (m *HINFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HINFO.Marshal(b, m, deterministic)
}
func (dst *HINFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HINFO.Merge(dst, src)
}
func (m *HINFO) XXX_Size() int {
	return xxx_messageInfo_HINFO.Size(m)
}
func (m *HINFO) XXX_DiscardUnknown() {
	xxx_messageInfo_HINFO.DiscardUnknown(m)
}

var xxx_messageInfo_HINFO proto.InternalMessageInfo

func (m *HINFO) GetCpu() string {
	if m != nil {
		return m.Cpu
	}
	return ""
}

func (m *HINFO) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

type HIP struct {
	HitLength            uint32   `protobuf:"varint,1,opt,name=hitLength" json:"hitLength,omitempty"`
	PublicKeyAlgorithm   uint32   `protobuf:"varint,2,opt,name=publicKeyAlgorithm" json:"publicKeyAlgorithm,omitempty"`
	PublicKeyLength      uint32   `protobuf:"varint,3,opt,name=PublicKeyLength" json:"PublicKeyLength,omitempty"`
	Hit                  string   `protobuf:"bytes,4,opt,name=hit" json:"hit,omitempty"`
	PublicKey            string   `protobuf:"bytes,5,opt,name=publicKey" json:"publicKey,omitempty"`
	RendezvousServers    []string `protobuf:"bytes,6,rep,name=RendezvousServers" json:"RendezvousServers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HIP) Reset()         { *m = HIP{} }
func (m *HIP) String() string { return proto.CompactTextString(m) }
func (*HIP) ProtoMessage()    {}
func (*HIP) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{22}
}
func (m *HIP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HIP.Unmarshal(m, b)
}
func (m *HIP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HIP.Marshal(b, m, deterministic)
}
func (dst *HIP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HIP.Merge(dst, src)
}
func (m *HIP) XXX_Size() int {
	return xxx_messageInfo_HIP.Size(m)
}
func (m *HIP) XXX_DiscardUnknown() {
	xxx_messageInfo_HIP.DiscardUnknown(m)
}

var xxx_messageInfo_HIP proto.InternalMessageInfo

func (m *HIP) GetHitLength() uint32 {
	if m != nil {
		return m.HitLength
	}
	return 0
}

func (m *HIP) GetPublicKeyAlgorithm() uint32 {
	if m != nil {
		return m.PublicKeyAlgorithm
	}
	return 0
}

func (m *HIP) GetPublicKeyLength() uint32 {
	if m != nil {
		return m.PublicKeyLength
	}
	return 0
}

func (m *HIP) GetHit() string {
	if m != nil {
		return m.Hit
	}
	return ""
}

func (m *HIP) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *HIP) GetRendezvousServers() []string {
	if m != nil {
		return m.RendezvousServers
	}
	return nil
}

type KEY struct {
	Flags                uint32   `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	Algorithm            uint32   `protobuf:"varint,3,opt,name=algorithm" json:"algorithm,omitempty"`
	PublicKey            string   `protobuf:"bytes,4,opt,name=publicKey" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KEY) Reset()         { *m = KEY{} }
func (m *KEY) String() string { return proto.CompactTextString(m) }
func (*KEY) ProtoMessage()    {}
func (*KEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{23}
}
func (m *KEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KEY.Unmarshal(m, b)
}
func (m *KEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KEY.Marshal(b, m, deterministic)
}
func (dst *KEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KEY.Merge(dst, src)
}
func (m *KEY) XXX_Size() int {
	return xxx_messageInfo_KEY.Size(m)
}
func (m *KEY) XXX_DiscardUnknown() {
	xxx_messageInfo_KEY.DiscardUnknown(m)
}

var xxx_messageInfo_KEY proto.InternalMessageInfo

func (m *KEY) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *KEY) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *KEY) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *KEY) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type KX struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Exchanger            string   `protobuf:"bytes,2,opt,name=exchanger" json:"exchanger,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KX) Reset()         { *m = KX{} }
func (m *KX) String() string { return proto.CompactTextString(m) }
func (*KX) ProtoMessage()    {}
func (*KX) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{24}
}
func (m *KX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KX.Unmarshal(m, b)
}
func (m *KX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KX.Marshal(b, m, deterministic)
}
func (dst *KX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KX.Merge(dst, src)
}
func (m *KX) XXX_Size() int {
	return xxx_messageInfo_KX.Size(m)
}
func (m *KX) XXX_DiscardUnknown() {
	xxx_messageInfo_KX.DiscardUnknown(m)
}

var xxx_messageInfo_KX proto.InternalMessageInfo

func (m *KX) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *KX) GetExchanger() string {
	if m != nil {
		return m.Exchanger
	}
	return ""
}

type L32 struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Locator32            string   `protobuf:"bytes,2,opt,name=Locator32" json:"Locator32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L32) Reset()         { *m = L32{} }
func (m *L32) String() string { return proto.CompactTextString(m) }
func (*L32) ProtoMessage()    {}
func (*L32) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{25}
}
func (m *L32) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L32.Unmarshal(m, b)
}
func (m *L32) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L32.Marshal(b, m, deterministic)
}
func (dst *L32) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L32.Merge(dst, src)
}
func (m *L32) XXX_Size() int {
	return xxx_messageInfo_L32.Size(m)
}
func (m *L32) XXX_DiscardUnknown() {
	xxx_messageInfo_L32.DiscardUnknown(m)
}

var xxx_messageInfo_L32 proto.InternalMessageInfo

func (m *L32) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *L32) GetLocator32() string {
	if m != nil {
		return m.Locator32
	}
	return ""
}

type L64 struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Locator64            uint64   `protobuf:"varint,2,opt,name=Locator64" json:"Locator64,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *L64) Reset()         { *m = L64{} }
func (m *L64) String() string { return proto.CompactTextString(m) }
func (*L64) ProtoMessage()    {}
func (*L64) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{26}
}
func (m *L64) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_L64.Unmarshal(m, b)
}
func (m *L64) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_L64.Marshal(b, m, deterministic)
}
func (dst *L64) XXX_Merge(src proto.Message) {
	xxx_messageInfo_L64.Merge(dst, src)
}
func (m *L64) XXX_Size() int {
	return xxx_messageInfo_L64.Size(m)
}
func (m *L64) XXX_DiscardUnknown() {
	xxx_messageInfo_L64.DiscardUnknown(m)
}

var xxx_messageInfo_L64 proto.InternalMessageInfo

func (m *L64) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *L64) GetLocator64() uint64 {
	if m != nil {
		return m.Locator64
	}
	return 0
}

type LOC struct {
	Version              uint32   `protobuf:"varint,1,opt,name=Version" json:"Version,omitempty"`
	Size                 uint32   `protobuf:"varint,2,opt,name=Size" json:"Size,omitempty"`
	HorizPre             uint32   `protobuf:"varint,3,opt,name=HorizPre" json:"HorizPre,omitempty"`
	VertPre              uint32   `protobuf:"varint,4,opt,name=VertPre" json:"VertPre,omitempty"`
	Latitude             uint32   `protobuf:"varint,5,opt,name=Latitude" json:"Latitude,omitempty"`
	Longitude            uint32   `protobuf:"varint,6,opt,name=Longitude" json:"Longitude,omitempty"`
	Altitude             uint32   `protobuf:"varint,7,opt,name=Altitude" json:"Altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LOC) Reset()         { *m = LOC{} }
func (m *LOC) String() string { return proto.CompactTextString(m) }
func (*LOC) ProtoMessage()    {}
func (*LOC) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{27}
}
func (m *LOC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LOC.Unmarshal(m, b)
}
func (m *LOC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LOC.Marshal(b, m, deterministic)
}
func (dst *LOC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LOC.Merge(dst, src)
}
func (m *LOC) XXX_Size() int {
	return xxx_messageInfo_LOC.Size(m)
}
func (m *LOC) XXX_DiscardUnknown() {
	xxx_messageInfo_LOC.DiscardUnknown(m)
}

var xxx_messageInfo_LOC proto.InternalMessageInfo

func (m *LOC) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *LOC) GetSize() uint32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *LOC) GetHorizPre() uint32 {
	if m != nil {
		return m.HorizPre
	}
	return 0
}

func (m *LOC) GetVertPre() uint32 {
	if m != nil {
		return m.VertPre
	}
	return 0
}

func (m *LOC) GetLatitude() uint32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *LOC) GetLongitude() uint32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *LOC) GetAltitude() uint32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type LP struct {
	FQDN                 string   `protobuf:"bytes,1,opt,name=FQDN" json:"FQDN,omitempty"`
	Preference           uint32   `protobuf:"varint,2,opt,name=preference" json:"preference,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LP) Reset()         { *m = LP{} }
func (m *LP) String() string { return proto.CompactTextString(m) }
func (*LP) ProtoMessage()    {}
func (*LP) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{28}
}
func (m *LP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LP.Unmarshal(m, b)
}
func (m *LP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LP.Marshal(b, m, deterministic)
}
func (dst *LP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LP.Merge(dst, src)
}
func (m *LP) XXX_Size() int {
	return xxx_messageInfo_LP.Size(m)
}
func (m *LP) XXX_DiscardUnknown() {
	xxx_messageInfo_LP.DiscardUnknown(m)
}

var xxx_messageInfo_LP proto.InternalMessageInfo

func (m *LP) GetFQDN() string {
	if m != nil {
		return m.FQDN
	}
	return ""
}

func (m *LP) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

type MB struct {
	Mb                   string   `protobuf:"bytes,1,opt,name=mb" json:"mb,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MB) Reset()         { *m = MB{} }
func (m *MB) String() string { return proto.CompactTextString(m) }
func (*MB) ProtoMessage()    {}
func (*MB) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{29}
}
func (m *MB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MB.Unmarshal(m, b)
}
func (m *MB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MB.Marshal(b, m, deterministic)
}
func (dst *MB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MB.Merge(dst, src)
}
func (m *MB) XXX_Size() int {
	return xxx_messageInfo_MB.Size(m)
}
func (m *MB) XXX_DiscardUnknown() {
	xxx_messageInfo_MB.DiscardUnknown(m)
}

var xxx_messageInfo_MB proto.InternalMessageInfo

func (m *MB) GetMb() string {
	if m != nil {
		return m.Mb
	}
	return ""
}

type MD struct {
	Md                   string   `protobuf:"bytes,1,opt,name=md" json:"md,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MD) Reset()         { *m = MD{} }
func (m *MD) String() string { return proto.CompactTextString(m) }
func (*MD) ProtoMessage()    {}
func (*MD) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{30}
}
func (m *MD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MD.Unmarshal(m, b)
}
func (m *MD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MD.Marshal(b, m, deterministic)
}
func (dst *MD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MD.Merge(dst, src)
}
func (m *MD) XXX_Size() int {
	return xxx_messageInfo_MD.Size(m)
}
func (m *MD) XXX_DiscardUnknown() {
	xxx_messageInfo_MD.DiscardUnknown(m)
}

var xxx_messageInfo_MD proto.InternalMessageInfo

func (m *MD) GetMd() string {
	if m != nil {
		return m.Md
	}
	return ""
}

type MF struct {
	Mf                   string   `protobuf:"bytes,1,opt,name=mf" json:"mf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MF) Reset()         { *m = MF{} }
func (m *MF) String() string { return proto.CompactTextString(m) }
func (*MF) ProtoMessage()    {}
func (*MF) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{31}
}
func (m *MF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MF.Unmarshal(m, b)
}
func (m *MF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MF.Marshal(b, m, deterministic)
}
func (dst *MF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MF.Merge(dst, src)
}
func (m *MF) XXX_Size() int {
	return xxx_messageInfo_MF.Size(m)
}
func (m *MF) XXX_DiscardUnknown() {
	xxx_messageInfo_MF.DiscardUnknown(m)
}

var xxx_messageInfo_MF proto.InternalMessageInfo

func (m *MF) GetMf() string {
	if m != nil {
		return m.Mf
	}
	return ""
}

type MG struct {
	Mg                   string   `protobuf:"bytes,1,opt,name=mg" json:"mg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MG) Reset()         { *m = MG{} }
func (m *MG) String() string { return proto.CompactTextString(m) }
func (*MG) ProtoMessage()    {}
func (*MG) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{32}
}
func (m *MG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MG.Unmarshal(m, b)
}
func (m *MG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MG.Marshal(b, m, deterministic)
}
func (dst *MG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MG.Merge(dst, src)
}
func (m *MG) XXX_Size() int {
	return xxx_messageInfo_MG.Size(m)
}
func (m *MG) XXX_DiscardUnknown() {
	xxx_messageInfo_MG.DiscardUnknown(m)
}

var xxx_messageInfo_MG proto.InternalMessageInfo

func (m *MG) GetMg() string {
	if m != nil {
		return m.Mg
	}
	return ""
}

type MINFO struct {
	Rmail                string   `protobuf:"bytes,1,opt,name=rmail" json:"rmail,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MINFO) Reset()         { *m = MINFO{} }
func (m *MINFO) String() string { return proto.CompactTextString(m) }
func (*MINFO) ProtoMessage()    {}
func (*MINFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{33}
}
func (m *MINFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MINFO.Unmarshal(m, b)
}
func (m *MINFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MINFO.Marshal(b, m, deterministic)
}
func (dst *MINFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MINFO.Merge(dst, src)
}
func (m *MINFO) XXX_Size() int {
	return xxx_messageInfo_MINFO.Size(m)
}
func (m *MINFO) XXX_DiscardUnknown() {
	xxx_messageInfo_MINFO.DiscardUnknown(m)
}

var xxx_messageInfo_MINFO proto.InternalMessageInfo

func (m *MINFO) GetRmail() string {
	if m != nil {
		return m.Rmail
	}
	return ""
}

func (m *MINFO) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type MR struct {
	Mr                   string   `protobuf:"bytes,1,opt,name=mr" json:"mr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MR) Reset()         { *m = MR{} }
func (m *MR) String() string { return proto.CompactTextString(m) }
func (*MR) ProtoMessage()    {}
func (*MR) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{34}
}
func (m *MR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MR.Unmarshal(m, b)
}
func (m *MR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MR.Marshal(b, m, deterministic)
}
func (dst *MR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MR.Merge(dst, src)
}
func (m *MR) XXX_Size() int {
	return xxx_messageInfo_MR.Size(m)
}
func (m *MR) XXX_DiscardUnknown() {
	xxx_messageInfo_MR.DiscardUnknown(m)
}

var xxx_messageInfo_MR proto.InternalMessageInfo

func (m *MR) GetMr() string {
	if m != nil {
		return m.Mr
	}
	return ""
}

type MX struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Mx                   string   `protobuf:"bytes,2,opt,name=mx" json:"mx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MX) Reset()         { *m = MX{} }
func (m *MX) String() string { return proto.CompactTextString(m) }
func (*MX) ProtoMessage()    {}
func (*MX) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{35}
}
func (m *MX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MX.Unmarshal(m, b)
}
func (m *MX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MX.Marshal(b, m, deterministic)
}
func (dst *MX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MX.Merge(dst, src)
}
func (m *MX) XXX_Size() int {
	return xxx_messageInfo_MX.Size(m)
}
func (m *MX) XXX_DiscardUnknown() {
	xxx_messageInfo_MX.DiscardUnknown(m)
}

var xxx_messageInfo_MX proto.InternalMessageInfo

func (m *MX) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *MX) GetMx() string {
	if m != nil {
		return m.Mx
	}
	return ""
}

type NAPTR struct {
	Order                uint32   `protobuf:"varint,1,opt,name=order" json:"order,omitempty"`
	Preference           uint32   `protobuf:"varint,2,opt,name=preference" json:"preference,omitempty"`
	Flags                string   `protobuf:"bytes,3,opt,name=flags" json:"flags,omitempty"`
	Service              string   `protobuf:"bytes,4,opt,name=service" json:"service,omitempty"`
	Regexp               string   `protobuf:"bytes,5,opt,name=regexp" json:"regexp,omitempty"`
	Replacement          string   `protobuf:"bytes,6,opt,name=replacement" json:"replacement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NAPTR) Reset()         { *m = NAPTR{} }
func (m *NAPTR) String() string { return proto.CompactTextString(m) }
func (*NAPTR) ProtoMessage()    {}
func (*NAPTR) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{36}
}
func (m *NAPTR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NAPTR.Unmarshal(m, b)
}
func (m *NAPTR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NAPTR.Marshal(b, m, deterministic)
}
func (dst *NAPTR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NAPTR.Merge(dst, src)
}
func (m *NAPTR) XXX_Size() int {
	return xxx_messageInfo_NAPTR.Size(m)
}
func (m *NAPTR) XXX_DiscardUnknown() {
	xxx_messageInfo_NAPTR.DiscardUnknown(m)
}

var xxx_messageInfo_NAPTR proto.InternalMessageInfo

func (m *NAPTR) GetOrder() uint32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *NAPTR) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *NAPTR) GetFlags() string {
	if m != nil {
		return m.Flags
	}
	return ""
}

func (m *NAPTR) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *NAPTR) GetRegexp() string {
	if m != nil {
		return m.Regexp
	}
	return ""
}

func (m *NAPTR) GetReplacement() string {
	if m != nil {
		return m.Replacement
	}
	return ""
}

type NID struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Nodeid               uint64   `protobuf:"varint,2,opt,name=nodeid" json:"nodeid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NID) Reset()         { *m = NID{} }
func (m *NID) String() string { return proto.CompactTextString(m) }
func (*NID) ProtoMessage()    {}
func (*NID) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{37}
}
func (m *NID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NID.Unmarshal(m, b)
}
func (m *NID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NID.Marshal(b, m, deterministic)
}
func (dst *NID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NID.Merge(dst, src)
}
func (m *NID) XXX_Size() int {
	return xxx_messageInfo_NID.Size(m)
}
func (m *NID) XXX_DiscardUnknown() {
	xxx_messageInfo_NID.DiscardUnknown(m)
}

var xxx_messageInfo_NID proto.InternalMessageInfo

func (m *NID) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *NID) GetNodeid() uint64 {
	if m != nil {
		return m.Nodeid
	}
	return 0
}

type NIMLOC struct {
	Locator              string   `protobuf:"bytes,1,opt,name=locator" json:"locator,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NIMLOC) Reset()         { *m = NIMLOC{} }
func (m *NIMLOC) String() string { return proto.CompactTextString(m) }
func (*NIMLOC) ProtoMessage()    {}
func (*NIMLOC) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{38}
}
func (m *NIMLOC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NIMLOC.Unmarshal(m, b)
}
func (m *NIMLOC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NIMLOC.Marshal(b, m, deterministic)
}
func (dst *NIMLOC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NIMLOC.Merge(dst, src)
}
func (m *NIMLOC) XXX_Size() int {
	return xxx_messageInfo_NIMLOC.Size(m)
}
func (m *NIMLOC) XXX_DiscardUnknown() {
	xxx_messageInfo_NIMLOC.DiscardUnknown(m)
}

var xxx_messageInfo_NIMLOC proto.InternalMessageInfo

func (m *NIMLOC) GetLocator() string {
	if m != nil {
		return m.Locator
	}
	return ""
}

type NINFO struct {
	ZSDATA               []string `protobuf:"bytes,1,rep,name=ZSDATA" json:"ZSDATA,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NINFO) Reset()         { *m = NINFO{} }
func (m *NINFO) String() string { return proto.CompactTextString(m) }
func (*NINFO) ProtoMessage()    {}
func (*NINFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{39}
}
func (m *NINFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NINFO.Unmarshal(m, b)
}
func (m *NINFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NINFO.Marshal(b, m, deterministic)
}
func (dst *NINFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NINFO.Merge(dst, src)
}
func (m *NINFO) XXX_Size() int {
	return xxx_messageInfo_NINFO.Size(m)
}
func (m *NINFO) XXX_DiscardUnknown() {
	xxx_messageInfo_NINFO.DiscardUnknown(m)
}

var xxx_messageInfo_NINFO proto.InternalMessageInfo

func (m *NINFO) GetZSDATA() []string {
	if m != nil {
		return m.ZSDATA
	}
	return nil
}

type NS struct {
	Ns                   string   `protobuf:"bytes,1,opt,name=ns" json:"ns,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NS) Reset()         { *m = NS{} }
func (m *NS) String() string { return proto.CompactTextString(m) }
func (*NS) ProtoMessage()    {}
func (*NS) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{40}
}
func (m *NS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NS.Unmarshal(m, b)
}
func (m *NS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NS.Marshal(b, m, deterministic)
}
func (dst *NS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NS.Merge(dst, src)
}
func (m *NS) XXX_Size() int {
	return xxx_messageInfo_NS.Size(m)
}
func (m *NS) XXX_DiscardUnknown() {
	xxx_messageInfo_NS.DiscardUnknown(m)
}

var xxx_messageInfo_NS proto.InternalMessageInfo

func (m *NS) GetNs() string {
	if m != nil {
		return m.Ns
	}
	return ""
}

type NSAPPTR struct {
	Ptr                  string   `protobuf:"bytes,1,opt,name=ptr" json:"ptr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NSAPPTR) Reset()         { *m = NSAPPTR{} }
func (m *NSAPPTR) String() string { return proto.CompactTextString(m) }
func (*NSAPPTR) ProtoMessage()    {}
func (*NSAPPTR) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{41}
}
func (m *NSAPPTR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NSAPPTR.Unmarshal(m, b)
}
func (m *NSAPPTR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NSAPPTR.Marshal(b, m, deterministic)
}
func (dst *NSAPPTR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NSAPPTR.Merge(dst, src)
}
func (m *NSAPPTR) XXX_Size() int {
	return xxx_messageInfo_NSAPPTR.Size(m)
}
func (m *NSAPPTR) XXX_DiscardUnknown() {
	xxx_messageInfo_NSAPPTR.DiscardUnknown(m)
}

var xxx_messageInfo_NSAPPTR proto.InternalMessageInfo

func (m *NSAPPTR) GetPtr() string {
	if m != nil {
		return m.Ptr
	}
	return ""
}

type NSEC struct {
	NextDomain           string   `protobuf:"bytes,1,opt,name=nextDomain" json:"nextDomain,omitempty"`
	TypeBitMap           []uint32 `protobuf:"varint,2,rep,packed,name=typeBitMap" json:"typeBitMap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NSEC) Reset()         { *m = NSEC{} }
func (m *NSEC) String() string { return proto.CompactTextString(m) }
func (*NSEC) ProtoMessage()    {}
func (*NSEC) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{42}
}
func (m *NSEC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NSEC.Unmarshal(m, b)
}
func (m *NSEC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NSEC.Marshal(b, m, deterministic)
}
func (dst *NSEC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NSEC.Merge(dst, src)
}
func (m *NSEC) XXX_Size() int {
	return xxx_messageInfo_NSEC.Size(m)
}
func (m *NSEC) XXX_DiscardUnknown() {
	xxx_messageInfo_NSEC.DiscardUnknown(m)
}

var xxx_messageInfo_NSEC proto.InternalMessageInfo

func (m *NSEC) GetNextDomain() string {
	if m != nil {
		return m.NextDomain
	}
	return ""
}

func (m *NSEC) GetTypeBitMap() []uint32 {
	if m != nil {
		return m.TypeBitMap
	}
	return nil
}

type NSEC3 struct {
	Hash                 uint32   `protobuf:"varint,1,opt,name=hash" json:"hash,omitempty"`
	Flags                uint32   `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Iterations           uint32   `protobuf:"varint,3,opt,name=iterations" json:"iterations,omitempty"`
	SaltLength           uint32   `protobuf:"varint,4,opt,name=saltLength" json:"saltLength,omitempty"`
	Salt                 string   `protobuf:"bytes,5,opt,name=salt" json:"salt,omitempty"`
	HashLength           uint32   `protobuf:"varint,6,opt,name=hashLength" json:"hashLength,omitempty"`
	NextDomain           string   `protobuf:"bytes,7,opt,name=nextDomain" json:"nextDomain,omitempty"`
	TypeBitMap           []uint32 `protobuf:"varint,8,rep,packed,name=typeBitMap" json:"typeBitMap,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NSEC3) Reset()         { *m = NSEC3{} }
func (m *NSEC3) String() string { return proto.CompactTextString(m) }
func (*NSEC3) ProtoMessage()    {}
func (*NSEC3) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{43}
}
func (m *NSEC3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NSEC3.Unmarshal(m, b)
}
func (m *NSEC3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NSEC3.Marshal(b, m, deterministic)
}
func (dst *NSEC3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NSEC3.Merge(dst, src)
}
func (m *NSEC3) XXX_Size() int {
	return xxx_messageInfo_NSEC3.Size(m)
}
func (m *NSEC3) XXX_DiscardUnknown() {
	xxx_messageInfo_NSEC3.DiscardUnknown(m)
}

var xxx_messageInfo_NSEC3 proto.InternalMessageInfo

func (m *NSEC3) GetHash() uint32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *NSEC3) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *NSEC3) GetIterations() uint32 {
	if m != nil {
		return m.Iterations
	}
	return 0
}

func (m *NSEC3) GetSaltLength() uint32 {
	if m != nil {
		return m.SaltLength
	}
	return 0
}

func (m *NSEC3) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

func (m *NSEC3) GetHashLength() uint32 {
	if m != nil {
		return m.HashLength
	}
	return 0
}

func (m *NSEC3) GetNextDomain() string {
	if m != nil {
		return m.NextDomain
	}
	return ""
}

func (m *NSEC3) GetTypeBitMap() []uint32 {
	if m != nil {
		return m.TypeBitMap
	}
	return nil
}

type NSEC3PARAM struct {
	Hash                 uint32   `protobuf:"varint,1,opt,name=hash" json:"hash,omitempty"`
	Flags                uint32   `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Iterations           uint32   `protobuf:"varint,3,opt,name=iterations" json:"iterations,omitempty"`
	SaltLength           uint32   `protobuf:"varint,4,opt,name=saltLength" json:"saltLength,omitempty"`
	Salt                 string   `protobuf:"bytes,5,opt,name=salt" json:"salt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NSEC3PARAM) Reset()         { *m = NSEC3PARAM{} }
func (m *NSEC3PARAM) String() string { return proto.CompactTextString(m) }
func (*NSEC3PARAM) ProtoMessage()    {}
func (*NSEC3PARAM) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{44}
}
func (m *NSEC3PARAM) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NSEC3PARAM.Unmarshal(m, b)
}
func (m *NSEC3PARAM) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NSEC3PARAM.Marshal(b, m, deterministic)
}
func (dst *NSEC3PARAM) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NSEC3PARAM.Merge(dst, src)
}
func (m *NSEC3PARAM) XXX_Size() int {
	return xxx_messageInfo_NSEC3PARAM.Size(m)
}
func (m *NSEC3PARAM) XXX_DiscardUnknown() {
	xxx_messageInfo_NSEC3PARAM.DiscardUnknown(m)
}

var xxx_messageInfo_NSEC3PARAM proto.InternalMessageInfo

func (m *NSEC3PARAM) GetHash() uint32 {
	if m != nil {
		return m.Hash
	}
	return 0
}

func (m *NSEC3PARAM) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *NSEC3PARAM) GetIterations() uint32 {
	if m != nil {
		return m.Iterations
	}
	return 0
}

func (m *NSEC3PARAM) GetSaltLength() uint32 {
	if m != nil {
		return m.SaltLength
	}
	return 0
}

func (m *NSEC3PARAM) GetSalt() string {
	if m != nil {
		return m.Salt
	}
	return ""
}

type OPENPGPKEY struct {
	PublicKey            string   `protobuf:"bytes,1,opt,name=publicKey" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OPENPGPKEY) Reset()         { *m = OPENPGPKEY{} }
func (m *OPENPGPKEY) String() string { return proto.CompactTextString(m) }
func (*OPENPGPKEY) ProtoMessage()    {}
func (*OPENPGPKEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{45}
}
func (m *OPENPGPKEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OPENPGPKEY.Unmarshal(m, b)
}
func (m *OPENPGPKEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OPENPGPKEY.Marshal(b, m, deterministic)
}
func (dst *OPENPGPKEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OPENPGPKEY.Merge(dst, src)
}
func (m *OPENPGPKEY) XXX_Size() int {
	return xxx_messageInfo_OPENPGPKEY.Size(m)
}
func (m *OPENPGPKEY) XXX_DiscardUnknown() {
	xxx_messageInfo_OPENPGPKEY.DiscardUnknown(m)
}

var xxx_messageInfo_OPENPGPKEY proto.InternalMessageInfo

func (m *OPENPGPKEY) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

// TODO:
type OPT struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OPT) Reset()         { *m = OPT{} }
func (m *OPT) String() string { return proto.CompactTextString(m) }
func (*OPT) ProtoMessage()    {}
func (*OPT) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{46}
}
func (m *OPT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OPT.Unmarshal(m, b)
}
func (m *OPT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OPT.Marshal(b, m, deterministic)
}
func (dst *OPT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OPT.Merge(dst, src)
}
func (m *OPT) XXX_Size() int {
	return xxx_messageInfo_OPT.Size(m)
}
func (m *OPT) XXX_DiscardUnknown() {
	xxx_messageInfo_OPT.DiscardUnknown(m)
}

var xxx_messageInfo_OPT proto.InternalMessageInfo

type PTR struct {
	Ptr                  string   `protobuf:"bytes,1,opt,name=ptr" json:"ptr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PTR) Reset()         { *m = PTR{} }
func (m *PTR) String() string { return proto.CompactTextString(m) }
func (*PTR) ProtoMessage()    {}
func (*PTR) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{47}
}
func (m *PTR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTR.Unmarshal(m, b)
}
func (m *PTR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTR.Marshal(b, m, deterministic)
}
func (dst *PTR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTR.Merge(dst, src)
}
func (m *PTR) XXX_Size() int {
	return xxx_messageInfo_PTR.Size(m)
}
func (m *PTR) XXX_DiscardUnknown() {
	xxx_messageInfo_PTR.DiscardUnknown(m)
}

var xxx_messageInfo_PTR proto.InternalMessageInfo

func (m *PTR) GetPtr() string {
	if m != nil {
		return m.Ptr
	}
	return ""
}

type PX struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Map822               string   `protobuf:"bytes,2,opt,name=map822" json:"map822,omitempty"`
	Mapx400              string   `protobuf:"bytes,3,opt,name=mapx400" json:"mapx400,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PX) Reset()         { *m = PX{} }
func (m *PX) String() string { return proto.CompactTextString(m) }
func (*PX) ProtoMessage()    {}
func (*PX) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{48}
}
func (m *PX) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PX.Unmarshal(m, b)
}
func (m *PX) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PX.Marshal(b, m, deterministic)
}
func (dst *PX) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PX.Merge(dst, src)
}
func (m *PX) XXX_Size() int {
	return xxx_messageInfo_PX.Size(m)
}
func (m *PX) XXX_DiscardUnknown() {
	xxx_messageInfo_PX.DiscardUnknown(m)
}

var xxx_messageInfo_PX proto.InternalMessageInfo

func (m *PX) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *PX) GetMap822() string {
	if m != nil {
		return m.Map822
	}
	return ""
}

func (m *PX) GetMapx400() string {
	if m != nil {
		return m.Mapx400
	}
	return ""
}

type RKEY struct {
	Flags                uint32   `protobuf:"varint,1,opt,name=flags" json:"flags,omitempty"`
	Protocol             uint32   `protobuf:"varint,2,opt,name=protocol" json:"protocol,omitempty"`
	Algorithm            uint32   `protobuf:"varint,3,opt,name=algorithm" json:"algorithm,omitempty"`
	PublicKey            string   `protobuf:"bytes,4,opt,name=publicKey" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RKEY) Reset()         { *m = RKEY{} }
func (m *RKEY) String() string { return proto.CompactTextString(m) }
func (*RKEY) ProtoMessage()    {}
func (*RKEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{49}
}
func (m *RKEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RKEY.Unmarshal(m, b)
}
func (m *RKEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RKEY.Marshal(b, m, deterministic)
}
func (dst *RKEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RKEY.Merge(dst, src)
}
func (m *RKEY) XXX_Size() int {
	return xxx_messageInfo_RKEY.Size(m)
}
func (m *RKEY) XXX_DiscardUnknown() {
	xxx_messageInfo_RKEY.DiscardUnknown(m)
}

var xxx_messageInfo_RKEY proto.InternalMessageInfo

func (m *RKEY) GetFlags() uint32 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *RKEY) GetProtocol() uint32 {
	if m != nil {
		return m.Protocol
	}
	return 0
}

func (m *RKEY) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *RKEY) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

type RP struct {
	Mbox                 string   `protobuf:"bytes,1,opt,name=mbox" json:"mbox,omitempty"`
	Txt                  string   `protobuf:"bytes,2,opt,name=txt" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RP) Reset()         { *m = RP{} }
func (m *RP) String() string { return proto.CompactTextString(m) }
func (*RP) ProtoMessage()    {}
func (*RP) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{50}
}
func (m *RP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RP.Unmarshal(m, b)
}
func (m *RP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RP.Marshal(b, m, deterministic)
}
func (dst *RP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RP.Merge(dst, src)
}
func (m *RP) XXX_Size() int {
	return xxx_messageInfo_RP.Size(m)
}
func (m *RP) XXX_DiscardUnknown() {
	xxx_messageInfo_RP.DiscardUnknown(m)
}

var xxx_messageInfo_RP proto.InternalMessageInfo

func (m *RP) GetMbox() string {
	if m != nil {
		return m.Mbox
	}
	return ""
}

func (m *RP) GetTxt() string {
	if m != nil {
		return m.Txt
	}
	return ""
}

type RRSIG struct {
	TypeCovered          uint32   `protobuf:"varint,1,opt,name=typeCovered" json:"typeCovered,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	Labels               uint32   `protobuf:"varint,3,opt,name=labels" json:"labels,omitempty"`
	Origttl              uint32   `protobuf:"varint,4,opt,name=origttl" json:"origttl,omitempty"`
	Expiration           uint32   `protobuf:"varint,5,opt,name=expiration" json:"expiration,omitempty"`
	Inception            uint32   `protobuf:"varint,6,opt,name=inception" json:"inception,omitempty"`
	Keytag               uint32   `protobuf:"varint,7,opt,name=keytag" json:"keytag,omitempty"`
	SignerName           string   `protobuf:"bytes,8,opt,name=signerName" json:"signerName,omitempty"`
	Signature            string   `protobuf:"bytes,9,opt,name=Signature" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RRSIG) Reset()         { *m = RRSIG{} }
func (m *RRSIG) String() string { return proto.CompactTextString(m) }
func (*RRSIG) ProtoMessage()    {}
func (*RRSIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{51}
}
func (m *RRSIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RRSIG.Unmarshal(m, b)
}
func (m *RRSIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RRSIG.Marshal(b, m, deterministic)
}
func (dst *RRSIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RRSIG.Merge(dst, src)
}
func (m *RRSIG) XXX_Size() int {
	return xxx_messageInfo_RRSIG.Size(m)
}
func (m *RRSIG) XXX_DiscardUnknown() {
	xxx_messageInfo_RRSIG.DiscardUnknown(m)
}

var xxx_messageInfo_RRSIG proto.InternalMessageInfo

func (m *RRSIG) GetTypeCovered() uint32 {
	if m != nil {
		return m.TypeCovered
	}
	return 0
}

func (m *RRSIG) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *RRSIG) GetLabels() uint32 {
	if m != nil {
		return m.Labels
	}
	return 0
}

func (m *RRSIG) GetOrigttl() uint32 {
	if m != nil {
		return m.Origttl
	}
	return 0
}

func (m *RRSIG) GetExpiration() uint32 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *RRSIG) GetInception() uint32 {
	if m != nil {
		return m.Inception
	}
	return 0
}

func (m *RRSIG) GetKeytag() uint32 {
	if m != nil {
		return m.Keytag
	}
	return 0
}

func (m *RRSIG) GetSignerName() string {
	if m != nil {
		return m.SignerName
	}
	return ""
}

func (m *RRSIG) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type RT struct {
	Preference           uint32   `protobuf:"varint,1,opt,name=preference" json:"preference,omitempty"`
	Host                 string   `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RT) Reset()         { *m = RT{} }
func (m *RT) String() string { return proto.CompactTextString(m) }
func (*RT) ProtoMessage()    {}
func (*RT) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{52}
}
func (m *RT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RT.Unmarshal(m, b)
}
func (m *RT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RT.Marshal(b, m, deterministic)
}
func (dst *RT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RT.Merge(dst, src)
}
func (m *RT) XXX_Size() int {
	return xxx_messageInfo_RT.Size(m)
}
func (m *RT) XXX_DiscardUnknown() {
	xxx_messageInfo_RT.DiscardUnknown(m)
}

var xxx_messageInfo_RT proto.InternalMessageInfo

func (m *RT) GetPreference() uint32 {
	if m != nil {
		return m.Preference
	}
	return 0
}

func (m *RT) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type SIG struct {
	TypeCovered          uint32   `protobuf:"varint,1,opt,name=typeCovered" json:"typeCovered,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	Labels               uint32   `protobuf:"varint,3,opt,name=labels" json:"labels,omitempty"`
	Origttl              uint32   `protobuf:"varint,4,opt,name=origttl" json:"origttl,omitempty"`
	Expiration           uint32   `protobuf:"varint,5,opt,name=expiration" json:"expiration,omitempty"`
	Inception            uint32   `protobuf:"varint,6,opt,name=inception" json:"inception,omitempty"`
	Keytag               uint32   `protobuf:"varint,7,opt,name=keytag" json:"keytag,omitempty"`
	SignerName           string   `protobuf:"bytes,8,opt,name=signerName" json:"signerName,omitempty"`
	Signature            string   `protobuf:"bytes,9,opt,name=Signature" json:"Signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SIG) Reset()         { *m = SIG{} }
func (m *SIG) String() string { return proto.CompactTextString(m) }
func (*SIG) ProtoMessage()    {}
func (*SIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{53}
}
func (m *SIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SIG.Unmarshal(m, b)
}
func (m *SIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SIG.Marshal(b, m, deterministic)
}
func (dst *SIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SIG.Merge(dst, src)
}
func (m *SIG) XXX_Size() int {
	return xxx_messageInfo_SIG.Size(m)
}
func (m *SIG) XXX_DiscardUnknown() {
	xxx_messageInfo_SIG.DiscardUnknown(m)
}

var xxx_messageInfo_SIG proto.InternalMessageInfo

func (m *SIG) GetTypeCovered() uint32 {
	if m != nil {
		return m.TypeCovered
	}
	return 0
}

func (m *SIG) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *SIG) GetLabels() uint32 {
	if m != nil {
		return m.Labels
	}
	return 0
}

func (m *SIG) GetOrigttl() uint32 {
	if m != nil {
		return m.Origttl
	}
	return 0
}

func (m *SIG) GetExpiration() uint32 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *SIG) GetInception() uint32 {
	if m != nil {
		return m.Inception
	}
	return 0
}

func (m *SIG) GetKeytag() uint32 {
	if m != nil {
		return m.Keytag
	}
	return 0
}

func (m *SIG) GetSignerName() string {
	if m != nil {
		return m.SignerName
	}
	return ""
}

func (m *SIG) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

type SMIMEA struct {
	Usage                uint32   `protobuf:"varint,1,opt,name=usage" json:"usage,omitempty"`
	Selector             uint32   `protobuf:"varint,2,opt,name=selector" json:"selector,omitempty"`
	MatchingType         uint32   `protobuf:"varint,3,opt,name=matchingType" json:"matchingType,omitempty"`
	Certificate          string   `protobuf:"bytes,4,opt,name=certificate" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMIMEA) Reset()         { *m = SMIMEA{} }
func (m *SMIMEA) String() string { return proto.CompactTextString(m) }
func (*SMIMEA) ProtoMessage()    {}
func (*SMIMEA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{54}
}
func (m *SMIMEA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMIMEA.Unmarshal(m, b)
}
func (m *SMIMEA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMIMEA.Marshal(b, m, deterministic)
}
func (dst *SMIMEA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMIMEA.Merge(dst, src)
}
func (m *SMIMEA) XXX_Size() int {
	return xxx_messageInfo_SMIMEA.Size(m)
}
func (m *SMIMEA) XXX_DiscardUnknown() {
	xxx_messageInfo_SMIMEA.DiscardUnknown(m)
}

var xxx_messageInfo_SMIMEA proto.InternalMessageInfo

func (m *SMIMEA) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *SMIMEA) GetSelector() uint32 {
	if m != nil {
		return m.Selector
	}
	return 0
}

func (m *SMIMEA) GetMatchingType() uint32 {
	if m != nil {
		return m.MatchingType
	}
	return 0
}

func (m *SMIMEA) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type SOA struct {
	Ns                   string   `protobuf:"bytes,1,opt,name=ns" json:"ns,omitempty"`
	Mbox                 string   `protobuf:"bytes,2,opt,name=mbox" json:"mbox,omitempty"`
	Serial               uint32   `protobuf:"varint,3,opt,name=serial" json:"serial,omitempty"`
	Refresh              uint32   `protobuf:"varint,4,opt,name=refresh" json:"refresh,omitempty"`
	Retry                uint32   `protobuf:"varint,5,opt,name=retry" json:"retry,omitempty"`
	Expire               uint32   `protobuf:"varint,6,opt,name=expire" json:"expire,omitempty"`
	Minttl               uint32   `protobuf:"varint,7,opt,name=minttl" json:"minttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SOA) Reset()         { *m = SOA{} }
func (m *SOA) String() string { return proto.CompactTextString(m) }
func (*SOA) ProtoMessage()    {}
func (*SOA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{55}
}
func (m *SOA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SOA.Unmarshal(m, b)
}
func (m *SOA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SOA.Marshal(b, m, deterministic)
}
func (dst *SOA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SOA.Merge(dst, src)
}
func (m *SOA) XXX_Size() int {
	return xxx_messageInfo_SOA.Size(m)
}
func (m *SOA) XXX_DiscardUnknown() {
	xxx_messageInfo_SOA.DiscardUnknown(m)
}

var xxx_messageInfo_SOA proto.InternalMessageInfo

func (m *SOA) GetNs() string {
	if m != nil {
		return m.Ns
	}
	return ""
}

func (m *SOA) GetMbox() string {
	if m != nil {
		return m.Mbox
	}
	return ""
}

func (m *SOA) GetSerial() uint32 {
	if m != nil {
		return m.Serial
	}
	return 0
}

func (m *SOA) GetRefresh() uint32 {
	if m != nil {
		return m.Refresh
	}
	return 0
}

func (m *SOA) GetRetry() uint32 {
	if m != nil {
		return m.Retry
	}
	return 0
}

func (m *SOA) GetExpire() uint32 {
	if m != nil {
		return m.Expire
	}
	return 0
}

func (m *SOA) GetMinttl() uint32 {
	if m != nil {
		return m.Minttl
	}
	return 0
}

type SPF struct {
	Txt                  []string `protobuf:"bytes,1,rep,name=txt" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SPF) Reset()         { *m = SPF{} }
func (m *SPF) String() string { return proto.CompactTextString(m) }
func (*SPF) ProtoMessage()    {}
func (*SPF) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{56}
}
func (m *SPF) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SPF.Unmarshal(m, b)
}
func (m *SPF) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SPF.Marshal(b, m, deterministic)
}
func (dst *SPF) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SPF.Merge(dst, src)
}
func (m *SPF) XXX_Size() int {
	return xxx_messageInfo_SPF.Size(m)
}
func (m *SPF) XXX_DiscardUnknown() {
	xxx_messageInfo_SPF.DiscardUnknown(m)
}

var xxx_messageInfo_SPF proto.InternalMessageInfo

func (m *SPF) GetTxt() []string {
	if m != nil {
		return m.Txt
	}
	return nil
}

type SRV struct {
	Priority             uint32   `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	Weight               uint32   `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port" json:"port,omitempty"`
	Target               string   `protobuf:"bytes,4,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SRV) Reset()         { *m = SRV{} }
func (m *SRV) String() string { return proto.CompactTextString(m) }
func (*SRV) ProtoMessage()    {}
func (*SRV) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{57}
}
func (m *SRV) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SRV.Unmarshal(m, b)
}
func (m *SRV) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SRV.Marshal(b, m, deterministic)
}
func (dst *SRV) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SRV.Merge(dst, src)
}
func (m *SRV) XXX_Size() int {
	return xxx_messageInfo_SRV.Size(m)
}
func (m *SRV) XXX_DiscardUnknown() {
	xxx_messageInfo_SRV.DiscardUnknown(m)
}

var xxx_messageInfo_SRV proto.InternalMessageInfo

func (m *SRV) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *SRV) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *SRV) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *SRV) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type SSHFP struct {
	Algorithm            uint32   `protobuf:"varint,1,opt,name=algorithm" json:"algorithm,omitempty"`
	Type                 uint32   `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Fingerprint          string   `protobuf:"bytes,3,opt,name=fingerprint" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SSHFP) Reset()         { *m = SSHFP{} }
func (m *SSHFP) String() string { return proto.CompactTextString(m) }
func (*SSHFP) ProtoMessage()    {}
func (*SSHFP) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{58}
}
func (m *SSHFP) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SSHFP.Unmarshal(m, b)
}
func (m *SSHFP) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SSHFP.Marshal(b, m, deterministic)
}
func (dst *SSHFP) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SSHFP.Merge(dst, src)
}
func (m *SSHFP) XXX_Size() int {
	return xxx_messageInfo_SSHFP.Size(m)
}
func (m *SSHFP) XXX_DiscardUnknown() {
	xxx_messageInfo_SSHFP.DiscardUnknown(m)
}

var xxx_messageInfo_SSHFP proto.InternalMessageInfo

func (m *SSHFP) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *SSHFP) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *SSHFP) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type TA struct {
	KeyTag               uint32   `protobuf:"varint,1,opt,name=keyTag" json:"keyTag,omitempty"`
	Algorithm            uint32   `protobuf:"varint,2,opt,name=algorithm" json:"algorithm,omitempty"`
	DigestType           uint32   `protobuf:"varint,3,opt,name=digestType" json:"digestType,omitempty"`
	Digest               string   `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TA) Reset()         { *m = TA{} }
func (m *TA) String() string { return proto.CompactTextString(m) }
func (*TA) ProtoMessage()    {}
func (*TA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{59}
}
func (m *TA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TA.Unmarshal(m, b)
}
func (m *TA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TA.Marshal(b, m, deterministic)
}
func (dst *TA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TA.Merge(dst, src)
}
func (m *TA) XXX_Size() int {
	return xxx_messageInfo_TA.Size(m)
}
func (m *TA) XXX_DiscardUnknown() {
	xxx_messageInfo_TA.DiscardUnknown(m)
}

var xxx_messageInfo_TA proto.InternalMessageInfo

func (m *TA) GetKeyTag() uint32 {
	if m != nil {
		return m.KeyTag
	}
	return 0
}

func (m *TA) GetAlgorithm() uint32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *TA) GetDigestType() uint32 {
	if m != nil {
		return m.DigestType
	}
	return 0
}

func (m *TA) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

type TALINK struct {
	PreviousName         string   `protobuf:"bytes,1,opt,name=previousName" json:"previousName,omitempty"`
	NextName             string   `protobuf:"bytes,2,opt,name=nextName" json:"nextName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TALINK) Reset()         { *m = TALINK{} }
func (m *TALINK) String() string { return proto.CompactTextString(m) }
func (*TALINK) ProtoMessage()    {}
func (*TALINK) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{60}
}
func (m *TALINK) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TALINK.Unmarshal(m, b)
}
func (m *TALINK) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TALINK.Marshal(b, m, deterministic)
}
func (dst *TALINK) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TALINK.Merge(dst, src)
}
func (m *TALINK) XXX_Size() int {
	return xxx_messageInfo_TALINK.Size(m)
}
func (m *TALINK) XXX_DiscardUnknown() {
	xxx_messageInfo_TALINK.DiscardUnknown(m)
}

var xxx_messageInfo_TALINK proto.InternalMessageInfo

func (m *TALINK) GetPreviousName() string {
	if m != nil {
		return m.PreviousName
	}
	return ""
}

func (m *TALINK) GetNextName() string {
	if m != nil {
		return m.NextName
	}
	return ""
}

type TKEY struct {
	Algorithm            string   `protobuf:"bytes,1,opt,name=algorithm" json:"algorithm,omitempty"`
	Inception            uint32   `protobuf:"varint,2,opt,name=inception" json:"inception,omitempty"`
	Expiration           uint32   `protobuf:"varint,3,opt,name=expiration" json:"expiration,omitempty"`
	Mode                 uint32   `protobuf:"varint,4,opt,name=mode" json:"mode,omitempty"`
	Error                uint32   `protobuf:"varint,5,opt,name=error" json:"error,omitempty"`
	KeySize              uint32   `protobuf:"varint,6,opt,name=keySize" json:"keySize,omitempty"`
	Key                  string   `protobuf:"bytes,7,opt,name=key" json:"key,omitempty"`
	OtherLen             uint32   `protobuf:"varint,8,opt,name=otherLen" json:"otherLen,omitempty"`
	OtherData            string   `protobuf:"bytes,9,opt,name=otherData" json:"otherData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TKEY) Reset()         { *m = TKEY{} }
func (m *TKEY) String() string { return proto.CompactTextString(m) }
func (*TKEY) ProtoMessage()    {}
func (*TKEY) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{61}
}
func (m *TKEY) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TKEY.Unmarshal(m, b)
}
func (m *TKEY) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TKEY.Marshal(b, m, deterministic)
}
func (dst *TKEY) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TKEY.Merge(dst, src)
}
func (m *TKEY) XXX_Size() int {
	return xxx_messageInfo_TKEY.Size(m)
}
func (m *TKEY) XXX_DiscardUnknown() {
	xxx_messageInfo_TKEY.DiscardUnknown(m)
}

var xxx_messageInfo_TKEY proto.InternalMessageInfo

func (m *TKEY) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *TKEY) GetInception() uint32 {
	if m != nil {
		return m.Inception
	}
	return 0
}

func (m *TKEY) GetExpiration() uint32 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *TKEY) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *TKEY) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *TKEY) GetKeySize() uint32 {
	if m != nil {
		return m.KeySize
	}
	return 0
}

func (m *TKEY) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TKEY) GetOtherLen() uint32 {
	if m != nil {
		return m.OtherLen
	}
	return 0
}

func (m *TKEY) GetOtherData() string {
	if m != nil {
		return m.OtherData
	}
	return ""
}

type TLSA struct {
	Usage                uint32   `protobuf:"varint,1,opt,name=usage" json:"usage,omitempty"`
	Selector             uint32   `protobuf:"varint,2,opt,name=selector" json:"selector,omitempty"`
	MatchingType         uint32   `protobuf:"varint,3,opt,name=matchingType" json:"matchingType,omitempty"`
	Certificate          string   `protobuf:"bytes,4,opt,name=certificate" json:"certificate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TLSA) Reset()         { *m = TLSA{} }
func (m *TLSA) String() string { return proto.CompactTextString(m) }
func (*TLSA) ProtoMessage()    {}
func (*TLSA) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{62}
}
func (m *TLSA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TLSA.Unmarshal(m, b)
}
func (m *TLSA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TLSA.Marshal(b, m, deterministic)
}
func (dst *TLSA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TLSA.Merge(dst, src)
}
func (m *TLSA) XXX_Size() int {
	return xxx_messageInfo_TLSA.Size(m)
}
func (m *TLSA) XXX_DiscardUnknown() {
	xxx_messageInfo_TLSA.DiscardUnknown(m)
}

var xxx_messageInfo_TLSA proto.InternalMessageInfo

func (m *TLSA) GetUsage() uint32 {
	if m != nil {
		return m.Usage
	}
	return 0
}

func (m *TLSA) GetSelector() uint32 {
	if m != nil {
		return m.Selector
	}
	return 0
}

func (m *TLSA) GetMatchingType() uint32 {
	if m != nil {
		return m.MatchingType
	}
	return 0
}

func (m *TLSA) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type TSIG struct {
	Algorithm            string   `protobuf:"bytes,1,opt,name=algorithm" json:"algorithm,omitempty"`
	TimeSigned           uint64   `protobuf:"varint,2,opt,name=timeSigned" json:"timeSigned,omitempty"`
	Fudge                uint32   `protobuf:"varint,3,opt,name=fudge" json:"fudge,omitempty"`
	MACSize              uint32   `protobuf:"varint,4,opt,name=MACSize" json:"MACSize,omitempty"`
	MAC                  string   `protobuf:"bytes,5,opt,name=MAC" json:"MAC,omitempty"`
	OrigID               uint32   `protobuf:"varint,6,opt,name=origID" json:"origID,omitempty"`
	Error                uint32   `protobuf:"varint,7,opt,name=error" json:"error,omitempty"`
	OtherLen             uint32   `protobuf:"varint,8,opt,name=otherLen" json:"otherLen,omitempty"`
	OtherData            string   `protobuf:"bytes,9,opt,name=otherData" json:"otherData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TSIG) Reset()         { *m = TSIG{} }
func (m *TSIG) String() string { return proto.CompactTextString(m) }
func (*TSIG) ProtoMessage()    {}
func (*TSIG) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{63}
}
func (m *TSIG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TSIG.Unmarshal(m, b)
}
func (m *TSIG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TSIG.Marshal(b, m, deterministic)
}
func (dst *TSIG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSIG.Merge(dst, src)
}
func (m *TSIG) XXX_Size() int {
	return xxx_messageInfo_TSIG.Size(m)
}
func (m *TSIG) XXX_DiscardUnknown() {
	xxx_messageInfo_TSIG.DiscardUnknown(m)
}

var xxx_messageInfo_TSIG proto.InternalMessageInfo

func (m *TSIG) GetAlgorithm() string {
	if m != nil {
		return m.Algorithm
	}
	return ""
}

func (m *TSIG) GetTimeSigned() uint64 {
	if m != nil {
		return m.TimeSigned
	}
	return 0
}

func (m *TSIG) GetFudge() uint32 {
	if m != nil {
		return m.Fudge
	}
	return 0
}

func (m *TSIG) GetMACSize() uint32 {
	if m != nil {
		return m.MACSize
	}
	return 0
}

func (m *TSIG) GetMAC() string {
	if m != nil {
		return m.MAC
	}
	return ""
}

func (m *TSIG) GetOrigID() uint32 {
	if m != nil {
		return m.OrigID
	}
	return 0
}

func (m *TSIG) GetError() uint32 {
	if m != nil {
		return m.Error
	}
	return 0
}

func (m *TSIG) GetOtherLen() uint32 {
	if m != nil {
		return m.OtherLen
	}
	return 0
}

func (m *TSIG) GetOtherData() string {
	if m != nil {
		return m.OtherData
	}
	return ""
}

type TXT struct {
	Txt                  []string `protobuf:"bytes,1,rep,name=txt" json:"txt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TXT) Reset()         { *m = TXT{} }
func (m *TXT) String() string { return proto.CompactTextString(m) }
func (*TXT) ProtoMessage()    {}
func (*TXT) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{64}
}
func (m *TXT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TXT.Unmarshal(m, b)
}
func (m *TXT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TXT.Marshal(b, m, deterministic)
}
func (dst *TXT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TXT.Merge(dst, src)
}
func (m *TXT) XXX_Size() int {
	return xxx_messageInfo_TXT.Size(m)
}
func (m *TXT) XXX_DiscardUnknown() {
	xxx_messageInfo_TXT.DiscardUnknown(m)
}

var xxx_messageInfo_TXT proto.InternalMessageInfo

func (m *TXT) GetTxt() []string {
	if m != nil {
		return m.Txt
	}
	return nil
}

type UID struct {
	Uid                  uint32   `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UID) Reset()         { *m = UID{} }
func (m *UID) String() string { return proto.CompactTextString(m) }
func (*UID) ProtoMessage()    {}
func (*UID) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{65}
}
func (m *UID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UID.Unmarshal(m, b)
}
func (m *UID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UID.Marshal(b, m, deterministic)
}
func (dst *UID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UID.Merge(dst, src)
}
func (m *UID) XXX_Size() int {
	return xxx_messageInfo_UID.Size(m)
}
func (m *UID) XXX_DiscardUnknown() {
	xxx_messageInfo_UID.DiscardUnknown(m)
}

var xxx_messageInfo_UID proto.InternalMessageInfo

func (m *UID) GetUid() uint32 {
	if m != nil {
		return m.Uid
	}
	return 0
}

type UINFO struct {
	Uinfo                string   `protobuf:"bytes,1,opt,name=uinfo" json:"uinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UINFO) Reset()         { *m = UINFO{} }
func (m *UINFO) String() string { return proto.CompactTextString(m) }
func (*UINFO) ProtoMessage()    {}
func (*UINFO) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{66}
}
func (m *UINFO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UINFO.Unmarshal(m, b)
}
func (m *UINFO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UINFO.Marshal(b, m, deterministic)
}
func (dst *UINFO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UINFO.Merge(dst, src)
}
func (m *UINFO) XXX_Size() int {
	return xxx_messageInfo_UINFO.Size(m)
}
func (m *UINFO) XXX_DiscardUnknown() {
	xxx_messageInfo_UINFO.DiscardUnknown(m)
}

var xxx_messageInfo_UINFO proto.InternalMessageInfo

func (m *UINFO) GetUinfo() string {
	if m != nil {
		return m.Uinfo
	}
	return ""
}

type URI struct {
	Priority             uint32   `protobuf:"varint,1,opt,name=priority" json:"priority,omitempty"`
	Weight               uint32   `protobuf:"varint,2,opt,name=weight" json:"weight,omitempty"`
	Target               string   `protobuf:"bytes,3,opt,name=target" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URI) Reset()         { *m = URI{} }
func (m *URI) String() string { return proto.CompactTextString(m) }
func (*URI) ProtoMessage()    {}
func (*URI) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{67}
}
func (m *URI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URI.Unmarshal(m, b)
}
func (m *URI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URI.Marshal(b, m, deterministic)
}
func (dst *URI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URI.Merge(dst, src)
}
func (m *URI) XXX_Size() int {
	return xxx_messageInfo_URI.Size(m)
}
func (m *URI) XXX_DiscardUnknown() {
	xxx_messageInfo_URI.DiscardUnknown(m)
}

var xxx_messageInfo_URI proto.InternalMessageInfo

func (m *URI) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *URI) GetWeight() uint32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *URI) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type X25 struct {
	PSDNAddress          string   `protobuf:"bytes,1,opt,name=PSDNAddress" json:"PSDNAddress,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *X25) Reset()         { *m = X25{} }
func (m *X25) String() string { return proto.CompactTextString(m) }
func (*X25) ProtoMessage()    {}
func (*X25) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{68}
}
func (m *X25) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_X25.Unmarshal(m, b)
}
func (m *X25) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_X25.Marshal(b, m, deterministic)
}
func (dst *X25) XXX_Merge(src proto.Message) {
	xxx_messageInfo_X25.Merge(dst, src)
}
func (m *X25) XXX_Size() int {
	return xxx_messageInfo_X25.Size(m)
}
func (m *X25) XXX_DiscardUnknown() {
	xxx_messageInfo_X25.DiscardUnknown(m)
}

var xxx_messageInfo_X25 proto.InternalMessageInfo

func (m *X25) GetPSDNAddress() string {
	if m != nil {
		return m.PSDNAddress
	}
	return ""
}

type ResourceRecord struct {
	Header *Header `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// Types that are valid to be assigned to Record:
	//	*ResourceRecord_A
	//	*ResourceRecord_Aaaa
	//	*ResourceRecord_Afsdb
	//	*ResourceRecord_Avc
	//	*ResourceRecord_Caa
	//	*ResourceRecord_Cdnskey
	//	*ResourceRecord_Cds
	//	*ResourceRecord_Cert
	//	*ResourceRecord_Cname
	//	*ResourceRecord_Csync
	//	*ResourceRecord_Dhcid
	//	*ResourceRecord_Dlv
	//	*ResourceRecord_Dname
	//	*ResourceRecord_Dnskey
	//	*ResourceRecord_Ds
	//	*ResourceRecord_Eid
	//	*ResourceRecord_Eui48
	//	*ResourceRecord_Eui64
	//	*ResourceRecord_Gid
	//	*ResourceRecord_Gpos
	//	*ResourceRecord_Hinfo
	//	*ResourceRecord_Hip
	//	*ResourceRecord_Key
	//	*ResourceRecord_Kx
	//	*ResourceRecord_L32
	//	*ResourceRecord_L64
	//	*ResourceRecord_Loc
	//	*ResourceRecord_Lp
	//	*ResourceRecord_Mb
	//	*ResourceRecord_Md
	//	*ResourceRecord_Mf
	//	*ResourceRecord_Mg
	//	*ResourceRecord_Minfo
	//	*ResourceRecord_Mr
	//	*ResourceRecord_Mx
	//	*ResourceRecord_Naptr
	//	*ResourceRecord_Nid
	//	*ResourceRecord_Nimloc
	//	*ResourceRecord_Ninfo
	//	*ResourceRecord_Ns
	//	*ResourceRecord_Nsapptr
	//	*ResourceRecord_Nsec
	//	*ResourceRecord_Nsec3
	//	*ResourceRecord_Nsec3Param
	//	*ResourceRecord_Openpgpkey
	//	*ResourceRecord_Opt
	//	*ResourceRecord_Ptr
	//	*ResourceRecord_Px
	//	*ResourceRecord_Rkey
	//	*ResourceRecord_Rp
	//	*ResourceRecord_Rrsig
	//	*ResourceRecord_Rt
	//	*ResourceRecord_Sig
	//	*ResourceRecord_Smimea
	//	*ResourceRecord_Soa
	//	*ResourceRecord_Spf
	//	*ResourceRecord_Srv
	//	*ResourceRecord_Sshfp
	//	*ResourceRecord_Ta
	//	*ResourceRecord_Talink
	//	*ResourceRecord_Tkey
	//	*ResourceRecord_Tlsa
	//	*ResourceRecord_Tsig
	//	*ResourceRecord_Txt
	//	*ResourceRecord_Uid
	//	*ResourceRecord_Uinfo
	//	*ResourceRecord_Uri
	//	*ResourceRecord_X25
	Record               isResourceRecord_Record `protobuf_oneof:"record"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ResourceRecord) Reset()         { *m = ResourceRecord{} }
func (m *ResourceRecord) String() string { return proto.CompactTextString(m) }
func (*ResourceRecord) ProtoMessage()    {}
func (*ResourceRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{69}
}
func (m *ResourceRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRecord.Unmarshal(m, b)
}
func (m *ResourceRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRecord.Marshal(b, m, deterministic)
}
func (dst *ResourceRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRecord.Merge(dst, src)
}
func (m *ResourceRecord) XXX_Size() int {
	return xxx_messageInfo_ResourceRecord.Size(m)
}
func (m *ResourceRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRecord proto.InternalMessageInfo

type isResourceRecord_Record interface {
	isResourceRecord_Record()
}

type ResourceRecord_A struct {
	A *A `protobuf:"bytes,2,opt,name=a,oneof"`
}
type ResourceRecord_Aaaa struct {
	Aaaa *AAAA `protobuf:"bytes,3,opt,name=aaaa,oneof"`
}
type ResourceRecord_Afsdb struct {
	Afsdb *AFSDB `protobuf:"bytes,4,opt,name=afsdb,oneof"`
}
type ResourceRecord_Avc struct {
	Avc *AVC `protobuf:"bytes,5,opt,name=avc,oneof"`
}
type ResourceRecord_Caa struct {
	Caa *CAA `protobuf:"bytes,6,opt,name=caa,oneof"`
}
type ResourceRecord_Cdnskey struct {
	Cdnskey *CDNSKEY `protobuf:"bytes,7,opt,name=cdnskey,oneof"`
}
type ResourceRecord_Cds struct {
	Cds *CDS `protobuf:"bytes,8,opt,name=cds,oneof"`
}
type ResourceRecord_Cert struct {
	Cert *CERT `protobuf:"bytes,9,opt,name=cert,oneof"`
}
type ResourceRecord_Cname struct {
	Cname *CNAME `protobuf:"bytes,10,opt,name=cname,oneof"`
}
type ResourceRecord_Csync struct {
	Csync *CSYNC `protobuf:"bytes,11,opt,name=csync,oneof"`
}
type ResourceRecord_Dhcid struct {
	Dhcid *DHCID `protobuf:"bytes,12,opt,name=dhcid,oneof"`
}
type ResourceRecord_Dlv struct {
	Dlv *DLV `protobuf:"bytes,13,opt,name=dlv,oneof"`
}
type ResourceRecord_Dname struct {
	Dname *DNAME `protobuf:"bytes,14,opt,name=dname,oneof"`
}
type ResourceRecord_Dnskey struct {
	Dnskey *DNSKEY `protobuf:"bytes,15,opt,name=dnskey,oneof"`
}
type ResourceRecord_Ds struct {
	Ds *DS `protobuf:"bytes,16,opt,name=ds,oneof"`
}
type ResourceRecord_Eid struct {
	Eid *EID `protobuf:"bytes,17,opt,name=eid,oneof"`
}
type ResourceRecord_Eui48 struct {
	Eui48 *EUI48 `protobuf:"bytes,18,opt,name=eui48,oneof"`
}
type ResourceRecord_Eui64 struct {
	Eui64 *EUI64 `protobuf:"bytes,19,opt,name=eui64,oneof"`
}
type ResourceRecord_Gid struct {
	Gid *GID `protobuf:"bytes,20,opt,name=gid,oneof"`
}
type ResourceRecord_Gpos struct {
	Gpos *GPOS `protobuf:"bytes,21,opt,name=gpos,oneof"`
}
type ResourceRecord_Hinfo struct {
	Hinfo *HINFO `protobuf:"bytes,22,opt,name=hinfo,oneof"`
}
type ResourceRecord_Hip struct {
	Hip *HIP `protobuf:"bytes,23,opt,name=hip,oneof"`
}
type ResourceRecord_Key struct {
	Key *KEY `protobuf:"bytes,24,opt,name=key,oneof"`
}
type ResourceRecord_Kx struct {
	Kx *KX `protobuf:"bytes,25,opt,name=kx,oneof"`
}
type ResourceRecord_L32 struct {
	L32 *L32 `protobuf:"bytes,26,opt,name=l32,oneof"`
}
type ResourceRecord_L64 struct {
	L64 *L64 `protobuf:"bytes,27,opt,name=l64,oneof"`
}
type ResourceRecord_Loc struct {
	Loc *LOC `protobuf:"bytes,28,opt,name=loc,oneof"`
}
type ResourceRecord_Lp struct {
	Lp *LP `protobuf:"bytes,29,opt,name=lp,oneof"`
}
type ResourceRecord_Mb struct {
	Mb *MB `protobuf:"bytes,30,opt,name=mb,oneof"`
}
type ResourceRecord_Md struct {
	Md *MD `protobuf:"bytes,31,opt,name=md,oneof"`
}
type ResourceRecord_Mf struct {
	Mf *MF `protobuf:"bytes,32,opt,name=mf,oneof"`
}
type ResourceRecord_Mg struct {
	Mg *MG `protobuf:"bytes,33,opt,name=mg,oneof"`
}
type ResourceRecord_Minfo struct {
	Minfo *MINFO `protobuf:"bytes,34,opt,name=minfo,oneof"`
}
type ResourceRecord_Mr struct {
	Mr *MR `protobuf:"bytes,35,opt,name=mr,oneof"`
}
type ResourceRecord_Mx struct {
	Mx *MX `protobuf:"bytes,36,opt,name=mx,oneof"`
}
type ResourceRecord_Naptr struct {
	Naptr *NAPTR `protobuf:"bytes,37,opt,name=naptr,oneof"`
}
type ResourceRecord_Nid struct {
	Nid *NID `protobuf:"bytes,38,opt,name=nid,oneof"`
}
type ResourceRecord_Nimloc struct {
	Nimloc *NIMLOC `protobuf:"bytes,39,opt,name=nimloc,oneof"`
}
type ResourceRecord_Ninfo struct {
	Ninfo *NINFO `protobuf:"bytes,40,opt,name=ninfo,oneof"`
}
type ResourceRecord_Ns struct {
	Ns *NS `protobuf:"bytes,41,opt,name=ns,oneof"`
}
type ResourceRecord_Nsapptr struct {
	Nsapptr *NSAPPTR `protobuf:"bytes,42,opt,name=nsapptr,oneof"`
}
type ResourceRecord_Nsec struct {
	Nsec *NSEC `protobuf:"bytes,43,opt,name=nsec,oneof"`
}
type ResourceRecord_Nsec3 struct {
	Nsec3 *NSEC3 `protobuf:"bytes,44,opt,name=nsec3,oneof"`
}
type ResourceRecord_Nsec3Param struct {
	Nsec3Param *NSEC3PARAM `protobuf:"bytes,45,opt,name=nsec3param,oneof"`
}
type ResourceRecord_Openpgpkey struct {
	Openpgpkey *OPENPGPKEY `protobuf:"bytes,46,opt,name=openpgpkey,oneof"`
}
type ResourceRecord_Opt struct {
	Opt *OPT `protobuf:"bytes,47,opt,name=opt,oneof"`
}
type ResourceRecord_Ptr struct {
	Ptr *PTR `protobuf:"bytes,48,opt,name=ptr,oneof"`
}
type ResourceRecord_Px struct {
	Px *PX `protobuf:"bytes,49,opt,name=px,oneof"`
}
type ResourceRecord_Rkey struct {
	Rkey *RKEY `protobuf:"bytes,50,opt,name=rkey,oneof"`
}
type ResourceRecord_Rp struct {
	Rp *RP `protobuf:"bytes,51,opt,name=rp,oneof"`
}
type ResourceRecord_Rrsig struct {
	Rrsig *RRSIG `protobuf:"bytes,52,opt,name=rrsig,oneof"`
}
type ResourceRecord_Rt struct {
	Rt *RT `protobuf:"bytes,53,opt,name=rt,oneof"`
}
type ResourceRecord_Sig struct {
	Sig *SIG `protobuf:"bytes,54,opt,name=sig,oneof"`
}
type ResourceRecord_Smimea struct {
	Smimea *SMIMEA `protobuf:"bytes,55,opt,name=smimea,oneof"`
}
type ResourceRecord_Soa struct {
	Soa *SOA `protobuf:"bytes,56,opt,name=soa,oneof"`
}
type ResourceRecord_Spf struct {
	Spf *SPF `protobuf:"bytes,57,opt,name=spf,oneof"`
}
type ResourceRecord_Srv struct {
	Srv *SRV `protobuf:"bytes,58,opt,name=srv,oneof"`
}
type ResourceRecord_Sshfp struct {
	Sshfp *SSHFP `protobuf:"bytes,59,opt,name=sshfp,oneof"`
}
type ResourceRecord_Ta struct {
	Ta *TA `protobuf:"bytes,60,opt,name=ta,oneof"`
}
type ResourceRecord_Talink struct {
	Talink *TALINK `protobuf:"bytes,61,opt,name=talink,oneof"`
}
type ResourceRecord_Tkey struct {
	Tkey *TKEY `protobuf:"bytes,62,opt,name=tkey,oneof"`
}
type ResourceRecord_Tlsa struct {
	Tlsa *TLSA `protobuf:"bytes,63,opt,name=tlsa,oneof"`
}
type ResourceRecord_Tsig struct {
	Tsig *TSIG `protobuf:"bytes,64,opt,name=tsig,oneof"`
}
type ResourceRecord_Txt struct {
	Txt *TXT `protobuf:"bytes,65,opt,name=txt,oneof"`
}
type ResourceRecord_Uid struct {
	Uid *UID `protobuf:"bytes,66,opt,name=uid,oneof"`
}
type ResourceRecord_Uinfo struct {
	Uinfo *UINFO `protobuf:"bytes,67,opt,name=uinfo,oneof"`
}
type ResourceRecord_Uri struct {
	Uri *URI `protobuf:"bytes,68,opt,name=uri,oneof"`
}
type ResourceRecord_X25 struct {
	X25 *X25 `protobuf:"bytes,69,opt,name=x25,oneof"`
}

func (*ResourceRecord_A) isResourceRecord_Record()          {}
func (*ResourceRecord_Aaaa) isResourceRecord_Record()       {}
func (*ResourceRecord_Afsdb) isResourceRecord_Record()      {}
func (*ResourceRecord_Avc) isResourceRecord_Record()        {}
func (*ResourceRecord_Caa) isResourceRecord_Record()        {}
func (*ResourceRecord_Cdnskey) isResourceRecord_Record()    {}
func (*ResourceRecord_Cds) isResourceRecord_Record()        {}
func (*ResourceRecord_Cert) isResourceRecord_Record()       {}
func (*ResourceRecord_Cname) isResourceRecord_Record()      {}
func (*ResourceRecord_Csync) isResourceRecord_Record()      {}
func (*ResourceRecord_Dhcid) isResourceRecord_Record()      {}
func (*ResourceRecord_Dlv) isResourceRecord_Record()        {}
func (*ResourceRecord_Dname) isResourceRecord_Record()      {}
func (*ResourceRecord_Dnskey) isResourceRecord_Record()     {}
func (*ResourceRecord_Ds) isResourceRecord_Record()         {}
func (*ResourceRecord_Eid) isResourceRecord_Record()        {}
func (*ResourceRecord_Eui48) isResourceRecord_Record()      {}
func (*ResourceRecord_Eui64) isResourceRecord_Record()      {}
func (*ResourceRecord_Gid) isResourceRecord_Record()        {}
func (*ResourceRecord_Gpos) isResourceRecord_Record()       {}
func (*ResourceRecord_Hinfo) isResourceRecord_Record()      {}
func (*ResourceRecord_Hip) isResourceRecord_Record()        {}
func (*ResourceRecord_Key) isResourceRecord_Record()        {}
func (*ResourceRecord_Kx) isResourceRecord_Record()         {}
func (*ResourceRecord_L32) isResourceRecord_Record()        {}
func (*ResourceRecord_L64) isResourceRecord_Record()        {}
func (*ResourceRecord_Loc) isResourceRecord_Record()        {}
func (*ResourceRecord_Lp) isResourceRecord_Record()         {}
func (*ResourceRecord_Mb) isResourceRecord_Record()         {}
func (*ResourceRecord_Md) isResourceRecord_Record()         {}
func (*ResourceRecord_Mf) isResourceRecord_Record()         {}
func (*ResourceRecord_Mg) isResourceRecord_Record()         {}
func (*ResourceRecord_Minfo) isResourceRecord_Record()      {}
func (*ResourceRecord_Mr) isResourceRecord_Record()         {}
func (*ResourceRecord_Mx) isResourceRecord_Record()         {}
func (*ResourceRecord_Naptr) isResourceRecord_Record()      {}
func (*ResourceRecord_Nid) isResourceRecord_Record()        {}
func (*ResourceRecord_Nimloc) isResourceRecord_Record()     {}
func (*ResourceRecord_Ninfo) isResourceRecord_Record()      {}
func (*ResourceRecord_Ns) isResourceRecord_Record()         {}
func (*ResourceRecord_Nsapptr) isResourceRecord_Record()    {}
func (*ResourceRecord_Nsec) isResourceRecord_Record()       {}
func (*ResourceRecord_Nsec3) isResourceRecord_Record()      {}
func (*ResourceRecord_Nsec3Param) isResourceRecord_Record() {}
func (*ResourceRecord_Openpgpkey) isResourceRecord_Record() {}
func (*ResourceRecord_Opt) isResourceRecord_Record()        {}
func (*ResourceRecord_Ptr) isResourceRecord_Record()        {}
func (*ResourceRecord_Px) isResourceRecord_Record()         {}
func (*ResourceRecord_Rkey) isResourceRecord_Record()       {}
func (*ResourceRecord_Rp) isResourceRecord_Record()         {}
func (*ResourceRecord_Rrsig) isResourceRecord_Record()      {}
func (*ResourceRecord_Rt) isResourceRecord_Record()         {}
func (*ResourceRecord_Sig) isResourceRecord_Record()        {}
func (*ResourceRecord_Smimea) isResourceRecord_Record()     {}
func (*ResourceRecord_Soa) isResourceRecord_Record()        {}
func (*ResourceRecord_Spf) isResourceRecord_Record()        {}
func (*ResourceRecord_Srv) isResourceRecord_Record()        {}
func (*ResourceRecord_Sshfp) isResourceRecord_Record()      {}
func (*ResourceRecord_Ta) isResourceRecord_Record()         {}
func (*ResourceRecord_Talink) isResourceRecord_Record()     {}
func (*ResourceRecord_Tkey) isResourceRecord_Record()       {}
func (*ResourceRecord_Tlsa) isResourceRecord_Record()       {}
func (*ResourceRecord_Tsig) isResourceRecord_Record()       {}
func (*ResourceRecord_Txt) isResourceRecord_Record()        {}
func (*ResourceRecord_Uid) isResourceRecord_Record()        {}
func (*ResourceRecord_Uinfo) isResourceRecord_Record()      {}
func (*ResourceRecord_Uri) isResourceRecord_Record()        {}
func (*ResourceRecord_X25) isResourceRecord_Record()        {}

func (m *ResourceRecord) GetRecord() isResourceRecord_Record {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *ResourceRecord) GetHeader() *Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ResourceRecord) GetA() *A {
	if x, ok := m.GetRecord().(*ResourceRecord_A); ok {
		return x.A
	}
	return nil
}

func (m *ResourceRecord) GetAaaa() *AAAA {
	if x, ok := m.GetRecord().(*ResourceRecord_Aaaa); ok {
		return x.Aaaa
	}
	return nil
}

func (m *ResourceRecord) GetAfsdb() *AFSDB {
	if x, ok := m.GetRecord().(*ResourceRecord_Afsdb); ok {
		return x.Afsdb
	}
	return nil
}

func (m *ResourceRecord) GetAvc() *AVC {
	if x, ok := m.GetRecord().(*ResourceRecord_Avc); ok {
		return x.Avc
	}
	return nil
}

func (m *ResourceRecord) GetCaa() *CAA {
	if x, ok := m.GetRecord().(*ResourceRecord_Caa); ok {
		return x.Caa
	}
	return nil
}

func (m *ResourceRecord) GetCdnskey() *CDNSKEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Cdnskey); ok {
		return x.Cdnskey
	}
	return nil
}

func (m *ResourceRecord) GetCds() *CDS {
	if x, ok := m.GetRecord().(*ResourceRecord_Cds); ok {
		return x.Cds
	}
	return nil
}

func (m *ResourceRecord) GetCert() *CERT {
	if x, ok := m.GetRecord().(*ResourceRecord_Cert); ok {
		return x.Cert
	}
	return nil
}

func (m *ResourceRecord) GetCname() *CNAME {
	if x, ok := m.GetRecord().(*ResourceRecord_Cname); ok {
		return x.Cname
	}
	return nil
}

func (m *ResourceRecord) GetCsync() *CSYNC {
	if x, ok := m.GetRecord().(*ResourceRecord_Csync); ok {
		return x.Csync
	}
	return nil
}

func (m *ResourceRecord) GetDhcid() *DHCID {
	if x, ok := m.GetRecord().(*ResourceRecord_Dhcid); ok {
		return x.Dhcid
	}
	return nil
}

func (m *ResourceRecord) GetDlv() *DLV {
	if x, ok := m.GetRecord().(*ResourceRecord_Dlv); ok {
		return x.Dlv
	}
	return nil
}

func (m *ResourceRecord) GetDname() *DNAME {
	if x, ok := m.GetRecord().(*ResourceRecord_Dname); ok {
		return x.Dname
	}
	return nil
}

func (m *ResourceRecord) GetDnskey() *DNSKEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Dnskey); ok {
		return x.Dnskey
	}
	return nil
}

func (m *ResourceRecord) GetDs() *DS {
	if x, ok := m.GetRecord().(*ResourceRecord_Ds); ok {
		return x.Ds
	}
	return nil
}

func (m *ResourceRecord) GetEid() *EID {
	if x, ok := m.GetRecord().(*ResourceRecord_Eid); ok {
		return x.Eid
	}
	return nil
}

func (m *ResourceRecord) GetEui48() *EUI48 {
	if x, ok := m.GetRecord().(*ResourceRecord_Eui48); ok {
		return x.Eui48
	}
	return nil
}

func (m *ResourceRecord) GetEui64() *EUI64 {
	if x, ok := m.GetRecord().(*ResourceRecord_Eui64); ok {
		return x.Eui64
	}
	return nil
}

func (m *ResourceRecord) GetGid() *GID {
	if x, ok := m.GetRecord().(*ResourceRecord_Gid); ok {
		return x.Gid
	}
	return nil
}

func (m *ResourceRecord) GetGpos() *GPOS {
	if x, ok := m.GetRecord().(*ResourceRecord_Gpos); ok {
		return x.Gpos
	}
	return nil
}

func (m *ResourceRecord) GetHinfo() *HINFO {
	if x, ok := m.GetRecord().(*ResourceRecord_Hinfo); ok {
		return x.Hinfo
	}
	return nil
}

func (m *ResourceRecord) GetHip() *HIP {
	if x, ok := m.GetRecord().(*ResourceRecord_Hip); ok {
		return x.Hip
	}
	return nil
}

func (m *ResourceRecord) GetKey() *KEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Key); ok {
		return x.Key
	}
	return nil
}

func (m *ResourceRecord) GetKx() *KX {
	if x, ok := m.GetRecord().(*ResourceRecord_Kx); ok {
		return x.Kx
	}
	return nil
}

func (m *ResourceRecord) GetL32() *L32 {
	if x, ok := m.GetRecord().(*ResourceRecord_L32); ok {
		return x.L32
	}
	return nil
}

func (m *ResourceRecord) GetL64() *L64 {
	if x, ok := m.GetRecord().(*ResourceRecord_L64); ok {
		return x.L64
	}
	return nil
}

func (m *ResourceRecord) GetLoc() *LOC {
	if x, ok := m.GetRecord().(*ResourceRecord_Loc); ok {
		return x.Loc
	}
	return nil
}

func (m *ResourceRecord) GetLp() *LP {
	if x, ok := m.GetRecord().(*ResourceRecord_Lp); ok {
		return x.Lp
	}
	return nil
}

func (m *ResourceRecord) GetMb() *MB {
	if x, ok := m.GetRecord().(*ResourceRecord_Mb); ok {
		return x.Mb
	}
	return nil
}

func (m *ResourceRecord) GetMd() *MD {
	if x, ok := m.GetRecord().(*ResourceRecord_Md); ok {
		return x.Md
	}
	return nil
}

func (m *ResourceRecord) GetMf() *MF {
	if x, ok := m.GetRecord().(*ResourceRecord_Mf); ok {
		return x.Mf
	}
	return nil
}

func (m *ResourceRecord) GetMg() *MG {
	if x, ok := m.GetRecord().(*ResourceRecord_Mg); ok {
		return x.Mg
	}
	return nil
}

func (m *ResourceRecord) GetMinfo() *MINFO {
	if x, ok := m.GetRecord().(*ResourceRecord_Minfo); ok {
		return x.Minfo
	}
	return nil
}

func (m *ResourceRecord) GetMr() *MR {
	if x, ok := m.GetRecord().(*ResourceRecord_Mr); ok {
		return x.Mr
	}
	return nil
}

func (m *ResourceRecord) GetMx() *MX {
	if x, ok := m.GetRecord().(*ResourceRecord_Mx); ok {
		return x.Mx
	}
	return nil
}

func (m *ResourceRecord) GetNaptr() *NAPTR {
	if x, ok := m.GetRecord().(*ResourceRecord_Naptr); ok {
		return x.Naptr
	}
	return nil
}

func (m *ResourceRecord) GetNid() *NID {
	if x, ok := m.GetRecord().(*ResourceRecord_Nid); ok {
		return x.Nid
	}
	return nil
}

func (m *ResourceRecord) GetNimloc() *NIMLOC {
	if x, ok := m.GetRecord().(*ResourceRecord_Nimloc); ok {
		return x.Nimloc
	}
	return nil
}

func (m *ResourceRecord) GetNinfo() *NINFO {
	if x, ok := m.GetRecord().(*ResourceRecord_Ninfo); ok {
		return x.Ninfo
	}
	return nil
}

func (m *ResourceRecord) GetNs() *NS {
	if x, ok := m.GetRecord().(*ResourceRecord_Ns); ok {
		return x.Ns
	}
	return nil
}

func (m *ResourceRecord) GetNsapptr() *NSAPPTR {
	if x, ok := m.GetRecord().(*ResourceRecord_Nsapptr); ok {
		return x.Nsapptr
	}
	return nil
}

func (m *ResourceRecord) GetNsec() *NSEC {
	if x, ok := m.GetRecord().(*ResourceRecord_Nsec); ok {
		return x.Nsec
	}
	return nil
}

func (m *ResourceRecord) GetNsec3() *NSEC3 {
	if x, ok := m.GetRecord().(*ResourceRecord_Nsec3); ok {
		return x.Nsec3
	}
	return nil
}

func (m *ResourceRecord) GetNsec3Param() *NSEC3PARAM {
	if x, ok := m.GetRecord().(*ResourceRecord_Nsec3Param); ok {
		return x.Nsec3Param
	}
	return nil
}

func (m *ResourceRecord) GetOpenpgpkey() *OPENPGPKEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Openpgpkey); ok {
		return x.Openpgpkey
	}
	return nil
}

func (m *ResourceRecord) GetOpt() *OPT {
	if x, ok := m.GetRecord().(*ResourceRecord_Opt); ok {
		return x.Opt
	}
	return nil
}

func (m *ResourceRecord) GetPtr() *PTR {
	if x, ok := m.GetRecord().(*ResourceRecord_Ptr); ok {
		return x.Ptr
	}
	return nil
}

func (m *ResourceRecord) GetPx() *PX {
	if x, ok := m.GetRecord().(*ResourceRecord_Px); ok {
		return x.Px
	}
	return nil
}

func (m *ResourceRecord) GetRkey() *RKEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Rkey); ok {
		return x.Rkey
	}
	return nil
}

func (m *ResourceRecord) GetRp() *RP {
	if x, ok := m.GetRecord().(*ResourceRecord_Rp); ok {
		return x.Rp
	}
	return nil
}

func (m *ResourceRecord) GetRrsig() *RRSIG {
	if x, ok := m.GetRecord().(*ResourceRecord_Rrsig); ok {
		return x.Rrsig
	}
	return nil
}

func (m *ResourceRecord) GetRt() *RT {
	if x, ok := m.GetRecord().(*ResourceRecord_Rt); ok {
		return x.Rt
	}
	return nil
}

func (m *ResourceRecord) GetSig() *SIG {
	if x, ok := m.GetRecord().(*ResourceRecord_Sig); ok {
		return x.Sig
	}
	return nil
}

func (m *ResourceRecord) GetSmimea() *SMIMEA {
	if x, ok := m.GetRecord().(*ResourceRecord_Smimea); ok {
		return x.Smimea
	}
	return nil
}

func (m *ResourceRecord) GetSoa() *SOA {
	if x, ok := m.GetRecord().(*ResourceRecord_Soa); ok {
		return x.Soa
	}
	return nil
}

func (m *ResourceRecord) GetSpf() *SPF {
	if x, ok := m.GetRecord().(*ResourceRecord_Spf); ok {
		return x.Spf
	}
	return nil
}

func (m *ResourceRecord) GetSrv() *SRV {
	if x, ok := m.GetRecord().(*ResourceRecord_Srv); ok {
		return x.Srv
	}
	return nil
}

func (m *ResourceRecord) GetSshfp() *SSHFP {
	if x, ok := m.GetRecord().(*ResourceRecord_Sshfp); ok {
		return x.Sshfp
	}
	return nil
}

func (m *ResourceRecord) GetTa() *TA {
	if x, ok := m.GetRecord().(*ResourceRecord_Ta); ok {
		return x.Ta
	}
	return nil
}

func (m *ResourceRecord) GetTalink() *TALINK {
	if x, ok := m.GetRecord().(*ResourceRecord_Talink); ok {
		return x.Talink
	}
	return nil
}

func (m *ResourceRecord) GetTkey() *TKEY {
	if x, ok := m.GetRecord().(*ResourceRecord_Tkey); ok {
		return x.Tkey
	}
	return nil
}

func (m *ResourceRecord) GetTlsa() *TLSA {
	if x, ok := m.GetRecord().(*ResourceRecord_Tlsa); ok {
		return x.Tlsa
	}
	return nil
}

func (m *ResourceRecord) GetTsig() *TSIG {
	if x, ok := m.GetRecord().(*ResourceRecord_Tsig); ok {
		return x.Tsig
	}
	return nil
}

func (m *ResourceRecord) GetTxt() *TXT {
	if x, ok := m.GetRecord().(*ResourceRecord_Txt); ok {
		return x.Txt
	}
	return nil
}

func (m *ResourceRecord) GetUid() *UID {
	if x, ok := m.GetRecord().(*ResourceRecord_Uid); ok {
		return x.Uid
	}
	return nil
}

func (m *ResourceRecord) GetUinfo() *UINFO {
	if x, ok := m.GetRecord().(*ResourceRecord_Uinfo); ok {
		return x.Uinfo
	}
	return nil
}

func (m *ResourceRecord) GetUri() *URI {
	if x, ok := m.GetRecord().(*ResourceRecord_Uri); ok {
		return x.Uri
	}
	return nil
}

func (m *ResourceRecord) GetX25() *X25 {
	if x, ok := m.GetRecord().(*ResourceRecord_X25); ok {
		return x.X25
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ResourceRecord) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ResourceRecord_OneofMarshaler, _ResourceRecord_OneofUnmarshaler, _ResourceRecord_OneofSizer, []interface{}{
		(*ResourceRecord_A)(nil),
		(*ResourceRecord_Aaaa)(nil),
		(*ResourceRecord_Afsdb)(nil),
		(*ResourceRecord_Avc)(nil),
		(*ResourceRecord_Caa)(nil),
		(*ResourceRecord_Cdnskey)(nil),
		(*ResourceRecord_Cds)(nil),
		(*ResourceRecord_Cert)(nil),
		(*ResourceRecord_Cname)(nil),
		(*ResourceRecord_Csync)(nil),
		(*ResourceRecord_Dhcid)(nil),
		(*ResourceRecord_Dlv)(nil),
		(*ResourceRecord_Dname)(nil),
		(*ResourceRecord_Dnskey)(nil),
		(*ResourceRecord_Ds)(nil),
		(*ResourceRecord_Eid)(nil),
		(*ResourceRecord_Eui48)(nil),
		(*ResourceRecord_Eui64)(nil),
		(*ResourceRecord_Gid)(nil),
		(*ResourceRecord_Gpos)(nil),
		(*ResourceRecord_Hinfo)(nil),
		(*ResourceRecord_Hip)(nil),
		(*ResourceRecord_Key)(nil),
		(*ResourceRecord_Kx)(nil),
		(*ResourceRecord_L32)(nil),
		(*ResourceRecord_L64)(nil),
		(*ResourceRecord_Loc)(nil),
		(*ResourceRecord_Lp)(nil),
		(*ResourceRecord_Mb)(nil),
		(*ResourceRecord_Md)(nil),
		(*ResourceRecord_Mf)(nil),
		(*ResourceRecord_Mg)(nil),
		(*ResourceRecord_Minfo)(nil),
		(*ResourceRecord_Mr)(nil),
		(*ResourceRecord_Mx)(nil),
		(*ResourceRecord_Naptr)(nil),
		(*ResourceRecord_Nid)(nil),
		(*ResourceRecord_Nimloc)(nil),
		(*ResourceRecord_Ninfo)(nil),
		(*ResourceRecord_Ns)(nil),
		(*ResourceRecord_Nsapptr)(nil),
		(*ResourceRecord_Nsec)(nil),
		(*ResourceRecord_Nsec3)(nil),
		(*ResourceRecord_Nsec3Param)(nil),
		(*ResourceRecord_Openpgpkey)(nil),
		(*ResourceRecord_Opt)(nil),
		(*ResourceRecord_Ptr)(nil),
		(*ResourceRecord_Px)(nil),
		(*ResourceRecord_Rkey)(nil),
		(*ResourceRecord_Rp)(nil),
		(*ResourceRecord_Rrsig)(nil),
		(*ResourceRecord_Rt)(nil),
		(*ResourceRecord_Sig)(nil),
		(*ResourceRecord_Smimea)(nil),
		(*ResourceRecord_Soa)(nil),
		(*ResourceRecord_Spf)(nil),
		(*ResourceRecord_Srv)(nil),
		(*ResourceRecord_Sshfp)(nil),
		(*ResourceRecord_Ta)(nil),
		(*ResourceRecord_Talink)(nil),
		(*ResourceRecord_Tkey)(nil),
		(*ResourceRecord_Tlsa)(nil),
		(*ResourceRecord_Tsig)(nil),
		(*ResourceRecord_Txt)(nil),
		(*ResourceRecord_Uid)(nil),
		(*ResourceRecord_Uinfo)(nil),
		(*ResourceRecord_Uri)(nil),
		(*ResourceRecord_X25)(nil),
	}
}

func _ResourceRecord_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ResourceRecord)
	// record
	switch x := m.Record.(type) {
	case *ResourceRecord_A:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.A); err != nil {
			return err
		}
	case *ResourceRecord_Aaaa:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Aaaa); err != nil {
			return err
		}
	case *ResourceRecord_Afsdb:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Afsdb); err != nil {
			return err
		}
	case *ResourceRecord_Avc:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Avc); err != nil {
			return err
		}
	case *ResourceRecord_Caa:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Caa); err != nil {
			return err
		}
	case *ResourceRecord_Cdnskey:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cdnskey); err != nil {
			return err
		}
	case *ResourceRecord_Cds:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cds); err != nil {
			return err
		}
	case *ResourceRecord_Cert:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cert); err != nil {
			return err
		}
	case *ResourceRecord_Cname:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Cname); err != nil {
			return err
		}
	case *ResourceRecord_Csync:
		b.EncodeVarint(11<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Csync); err != nil {
			return err
		}
	case *ResourceRecord_Dhcid:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dhcid); err != nil {
			return err
		}
	case *ResourceRecord_Dlv:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dlv); err != nil {
			return err
		}
	case *ResourceRecord_Dname:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dname); err != nil {
			return err
		}
	case *ResourceRecord_Dnskey:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dnskey); err != nil {
			return err
		}
	case *ResourceRecord_Ds:
		b.EncodeVarint(16<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ds); err != nil {
			return err
		}
	case *ResourceRecord_Eid:
		b.EncodeVarint(17<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Eid); err != nil {
			return err
		}
	case *ResourceRecord_Eui48:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Eui48); err != nil {
			return err
		}
	case *ResourceRecord_Eui64:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Eui64); err != nil {
			return err
		}
	case *ResourceRecord_Gid:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gid); err != nil {
			return err
		}
	case *ResourceRecord_Gpos:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Gpos); err != nil {
			return err
		}
	case *ResourceRecord_Hinfo:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hinfo); err != nil {
			return err
		}
	case *ResourceRecord_Hip:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hip); err != nil {
			return err
		}
	case *ResourceRecord_Key:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Key); err != nil {
			return err
		}
	case *ResourceRecord_Kx:
		b.EncodeVarint(25<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Kx); err != nil {
			return err
		}
	case *ResourceRecord_L32:
		b.EncodeVarint(26<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.L32); err != nil {
			return err
		}
	case *ResourceRecord_L64:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.L64); err != nil {
			return err
		}
	case *ResourceRecord_Loc:
		b.EncodeVarint(28<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Loc); err != nil {
			return err
		}
	case *ResourceRecord_Lp:
		b.EncodeVarint(29<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Lp); err != nil {
			return err
		}
	case *ResourceRecord_Mb:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mb); err != nil {
			return err
		}
	case *ResourceRecord_Md:
		b.EncodeVarint(31<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Md); err != nil {
			return err
		}
	case *ResourceRecord_Mf:
		b.EncodeVarint(32<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mf); err != nil {
			return err
		}
	case *ResourceRecord_Mg:
		b.EncodeVarint(33<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mg); err != nil {
			return err
		}
	case *ResourceRecord_Minfo:
		b.EncodeVarint(34<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Minfo); err != nil {
			return err
		}
	case *ResourceRecord_Mr:
		b.EncodeVarint(35<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mr); err != nil {
			return err
		}
	case *ResourceRecord_Mx:
		b.EncodeVarint(36<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mx); err != nil {
			return err
		}
	case *ResourceRecord_Naptr:
		b.EncodeVarint(37<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Naptr); err != nil {
			return err
		}
	case *ResourceRecord_Nid:
		b.EncodeVarint(38<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nid); err != nil {
			return err
		}
	case *ResourceRecord_Nimloc:
		b.EncodeVarint(39<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nimloc); err != nil {
			return err
		}
	case *ResourceRecord_Ninfo:
		b.EncodeVarint(40<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ninfo); err != nil {
			return err
		}
	case *ResourceRecord_Ns:
		b.EncodeVarint(41<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ns); err != nil {
			return err
		}
	case *ResourceRecord_Nsapptr:
		b.EncodeVarint(42<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nsapptr); err != nil {
			return err
		}
	case *ResourceRecord_Nsec:
		b.EncodeVarint(43<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nsec); err != nil {
			return err
		}
	case *ResourceRecord_Nsec3:
		b.EncodeVarint(44<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nsec3); err != nil {
			return err
		}
	case *ResourceRecord_Nsec3Param:
		b.EncodeVarint(45<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Nsec3Param); err != nil {
			return err
		}
	case *ResourceRecord_Openpgpkey:
		b.EncodeVarint(46<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Openpgpkey); err != nil {
			return err
		}
	case *ResourceRecord_Opt:
		b.EncodeVarint(47<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Opt); err != nil {
			return err
		}
	case *ResourceRecord_Ptr:
		b.EncodeVarint(48<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ptr); err != nil {
			return err
		}
	case *ResourceRecord_Px:
		b.EncodeVarint(49<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Px); err != nil {
			return err
		}
	case *ResourceRecord_Rkey:
		b.EncodeVarint(50<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rkey); err != nil {
			return err
		}
	case *ResourceRecord_Rp:
		b.EncodeVarint(51<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rp); err != nil {
			return err
		}
	case *ResourceRecord_Rrsig:
		b.EncodeVarint(52<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rrsig); err != nil {
			return err
		}
	case *ResourceRecord_Rt:
		b.EncodeVarint(53<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Rt); err != nil {
			return err
		}
	case *ResourceRecord_Sig:
		b.EncodeVarint(54<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sig); err != nil {
			return err
		}
	case *ResourceRecord_Smimea:
		b.EncodeVarint(55<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Smimea); err != nil {
			return err
		}
	case *ResourceRecord_Soa:
		b.EncodeVarint(56<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Soa); err != nil {
			return err
		}
	case *ResourceRecord_Spf:
		b.EncodeVarint(57<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Spf); err != nil {
			return err
		}
	case *ResourceRecord_Srv:
		b.EncodeVarint(58<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Srv); err != nil {
			return err
		}
	case *ResourceRecord_Sshfp:
		b.EncodeVarint(59<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Sshfp); err != nil {
			return err
		}
	case *ResourceRecord_Ta:
		b.EncodeVarint(60<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Ta); err != nil {
			return err
		}
	case *ResourceRecord_Talink:
		b.EncodeVarint(61<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Talink); err != nil {
			return err
		}
	case *ResourceRecord_Tkey:
		b.EncodeVarint(62<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tkey); err != nil {
			return err
		}
	case *ResourceRecord_Tlsa:
		b.EncodeVarint(63<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tlsa); err != nil {
			return err
		}
	case *ResourceRecord_Tsig:
		b.EncodeVarint(64<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tsig); err != nil {
			return err
		}
	case *ResourceRecord_Txt:
		b.EncodeVarint(65<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Txt); err != nil {
			return err
		}
	case *ResourceRecord_Uid:
		b.EncodeVarint(66<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uid); err != nil {
			return err
		}
	case *ResourceRecord_Uinfo:
		b.EncodeVarint(67<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uinfo); err != nil {
			return err
		}
	case *ResourceRecord_Uri:
		b.EncodeVarint(68<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Uri); err != nil {
			return err
		}
	case *ResourceRecord_X25:
		b.EncodeVarint(69<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.X25); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ResourceRecord.Record has unexpected type %T", x)
	}
	return nil
}

func _ResourceRecord_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ResourceRecord)
	switch tag {
	case 2: // record.a
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(A)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_A{msg}
		return true, err
	case 3: // record.aaaa
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AAAA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Aaaa{msg}
		return true, err
	case 4: // record.afsdb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AFSDB)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Afsdb{msg}
		return true, err
	case 5: // record.avc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AVC)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Avc{msg}
		return true, err
	case 6: // record.caa
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CAA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Caa{msg}
		return true, err
	case 7: // record.cdnskey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CDNSKEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Cdnskey{msg}
		return true, err
	case 8: // record.cds
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CDS)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Cds{msg}
		return true, err
	case 9: // record.cert
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CERT)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Cert{msg}
		return true, err
	case 10: // record.cname
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CNAME)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Cname{msg}
		return true, err
	case 11: // record.csync
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CSYNC)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Csync{msg}
		return true, err
	case 12: // record.dhcid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DHCID)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Dhcid{msg}
		return true, err
	case 13: // record.dlv
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DLV)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Dlv{msg}
		return true, err
	case 14: // record.dname
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DNAME)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Dname{msg}
		return true, err
	case 15: // record.dnskey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DNSKEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Dnskey{msg}
		return true, err
	case 16: // record.ds
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DS)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Ds{msg}
		return true, err
	case 17: // record.eid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EID)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Eid{msg}
		return true, err
	case 18: // record.eui48
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EUI48)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Eui48{msg}
		return true, err
	case 19: // record.eui64
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(EUI64)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Eui64{msg}
		return true, err
	case 20: // record.gid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GID)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Gid{msg}
		return true, err
	case 21: // record.gpos
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(GPOS)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Gpos{msg}
		return true, err
	case 22: // record.hinfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HINFO)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Hinfo{msg}
		return true, err
	case 23: // record.hip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(HIP)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Hip{msg}
		return true, err
	case 24: // record.key
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Key{msg}
		return true, err
	case 25: // record.kx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(KX)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Kx{msg}
		return true, err
	case 26: // record.l32
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(L32)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_L32{msg}
		return true, err
	case 27: // record.l64
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(L64)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_L64{msg}
		return true, err
	case 28: // record.loc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LOC)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Loc{msg}
		return true, err
	case 29: // record.lp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(LP)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Lp{msg}
		return true, err
	case 30: // record.mb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MB)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Mb{msg}
		return true, err
	case 31: // record.md
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MD)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Md{msg}
		return true, err
	case 32: // record.mf
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MF)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Mf{msg}
		return true, err
	case 33: // record.mg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MG)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Mg{msg}
		return true, err
	case 34: // record.minfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MINFO)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Minfo{msg}
		return true, err
	case 35: // record.mr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MR)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Mr{msg}
		return true, err
	case 36: // record.mx
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MX)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Mx{msg}
		return true, err
	case 37: // record.naptr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NAPTR)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Naptr{msg}
		return true, err
	case 38: // record.nid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NID)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nid{msg}
		return true, err
	case 39: // record.nimloc
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NIMLOC)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nimloc{msg}
		return true, err
	case 40: // record.ninfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NINFO)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Ninfo{msg}
		return true, err
	case 41: // record.ns
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NS)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Ns{msg}
		return true, err
	case 42: // record.nsapptr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NSAPPTR)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nsapptr{msg}
		return true, err
	case 43: // record.nsec
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NSEC)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nsec{msg}
		return true, err
	case 44: // record.nsec3
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NSEC3)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nsec3{msg}
		return true, err
	case 45: // record.nsec3param
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NSEC3PARAM)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Nsec3Param{msg}
		return true, err
	case 46: // record.openpgpkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OPENPGPKEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Openpgpkey{msg}
		return true, err
	case 47: // record.opt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(OPT)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Opt{msg}
		return true, err
	case 48: // record.ptr
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PTR)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Ptr{msg}
		return true, err
	case 49: // record.px
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PX)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Px{msg}
		return true, err
	case 50: // record.rkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RKEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Rkey{msg}
		return true, err
	case 51: // record.rp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RP)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Rp{msg}
		return true, err
	case 52: // record.rrsig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RRSIG)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Rrsig{msg}
		return true, err
	case 53: // record.rt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RT)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Rt{msg}
		return true, err
	case 54: // record.sig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SIG)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Sig{msg}
		return true, err
	case 55: // record.smimea
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SMIMEA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Smimea{msg}
		return true, err
	case 56: // record.soa
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SOA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Soa{msg}
		return true, err
	case 57: // record.spf
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SPF)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Spf{msg}
		return true, err
	case 58: // record.srv
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SRV)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Srv{msg}
		return true, err
	case 59: // record.sshfp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(SSHFP)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Sshfp{msg}
		return true, err
	case 60: // record.ta
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Ta{msg}
		return true, err
	case 61: // record.talink
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TALINK)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Talink{msg}
		return true, err
	case 62: // record.tkey
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TKEY)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Tkey{msg}
		return true, err
	case 63: // record.tlsa
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TLSA)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Tlsa{msg}
		return true, err
	case 64: // record.tsig
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TSIG)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Tsig{msg}
		return true, err
	case 65: // record.txt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TXT)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Txt{msg}
		return true, err
	case 66: // record.uid
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UID)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Uid{msg}
		return true, err
	case 67: // record.uinfo
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(UINFO)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Uinfo{msg}
		return true, err
	case 68: // record.uri
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(URI)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_Uri{msg}
		return true, err
	case 69: // record.x25
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(X25)
		err := b.DecodeMessage(msg)
		m.Record = &ResourceRecord_X25{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ResourceRecord_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ResourceRecord)
	// record
	switch x := m.Record.(type) {
	case *ResourceRecord_A:
		s := proto.Size(x.A)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Aaaa:
		s := proto.Size(x.Aaaa)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Afsdb:
		s := proto.Size(x.Afsdb)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Avc:
		s := proto.Size(x.Avc)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Caa:
		s := proto.Size(x.Caa)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Cdnskey:
		s := proto.Size(x.Cdnskey)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Cds:
		s := proto.Size(x.Cds)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Cert:
		s := proto.Size(x.Cert)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Cname:
		s := proto.Size(x.Cname)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Csync:
		s := proto.Size(x.Csync)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Dhcid:
		s := proto.Size(x.Dhcid)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Dlv:
		s := proto.Size(x.Dlv)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Dname:
		s := proto.Size(x.Dname)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Dnskey:
		s := proto.Size(x.Dnskey)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Ds:
		s := proto.Size(x.Ds)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Eid:
		s := proto.Size(x.Eid)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Eui48:
		s := proto.Size(x.Eui48)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Eui64:
		s := proto.Size(x.Eui64)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Gid:
		s := proto.Size(x.Gid)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Gpos:
		s := proto.Size(x.Gpos)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Hinfo:
		s := proto.Size(x.Hinfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Hip:
		s := proto.Size(x.Hip)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Key:
		s := proto.Size(x.Key)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Kx:
		s := proto.Size(x.Kx)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_L32:
		s := proto.Size(x.L32)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_L64:
		s := proto.Size(x.L64)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Loc:
		s := proto.Size(x.Loc)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Lp:
		s := proto.Size(x.Lp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Mb:
		s := proto.Size(x.Mb)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Md:
		s := proto.Size(x.Md)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Mf:
		s := proto.Size(x.Mf)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Mg:
		s := proto.Size(x.Mg)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Minfo:
		s := proto.Size(x.Minfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Mr:
		s := proto.Size(x.Mr)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Mx:
		s := proto.Size(x.Mx)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Naptr:
		s := proto.Size(x.Naptr)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nid:
		s := proto.Size(x.Nid)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nimloc:
		s := proto.Size(x.Nimloc)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Ninfo:
		s := proto.Size(x.Ninfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Ns:
		s := proto.Size(x.Ns)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nsapptr:
		s := proto.Size(x.Nsapptr)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nsec:
		s := proto.Size(x.Nsec)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nsec3:
		s := proto.Size(x.Nsec3)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Nsec3Param:
		s := proto.Size(x.Nsec3Param)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Openpgpkey:
		s := proto.Size(x.Openpgpkey)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Opt:
		s := proto.Size(x.Opt)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Ptr:
		s := proto.Size(x.Ptr)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Px:
		s := proto.Size(x.Px)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Rkey:
		s := proto.Size(x.Rkey)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Rp:
		s := proto.Size(x.Rp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Rrsig:
		s := proto.Size(x.Rrsig)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Rt:
		s := proto.Size(x.Rt)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Sig:
		s := proto.Size(x.Sig)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Smimea:
		s := proto.Size(x.Smimea)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Soa:
		s := proto.Size(x.Soa)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Spf:
		s := proto.Size(x.Spf)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Srv:
		s := proto.Size(x.Srv)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Sshfp:
		s := proto.Size(x.Sshfp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Ta:
		s := proto.Size(x.Ta)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Talink:
		s := proto.Size(x.Talink)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Tkey:
		s := proto.Size(x.Tkey)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Tlsa:
		s := proto.Size(x.Tlsa)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Tsig:
		s := proto.Size(x.Tsig)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Txt:
		s := proto.Size(x.Txt)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Uid:
		s := proto.Size(x.Uid)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Uinfo:
		s := proto.Size(x.Uinfo)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_Uri:
		s := proto.Size(x.Uri)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ResourceRecord_X25:
		s := proto.Size(x.X25)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ResourceRecords struct {
	Records              []*ResourceRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourceRecords) Reset()         { *m = ResourceRecords{} }
func (m *ResourceRecords) String() string { return proto.CompactTextString(m) }
func (*ResourceRecords) ProtoMessage()    {}
func (*ResourceRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_api_dfce5a86421ba59f, []int{70}
}
func (m *ResourceRecords) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRecords.Unmarshal(m, b)
}
func (m *ResourceRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRecords.Marshal(b, m, deterministic)
}
func (dst *ResourceRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRecords.Merge(dst, src)
}
func (m *ResourceRecords) XXX_Size() int {
	return xxx_messageInfo_ResourceRecords.Size(m)
}
func (m *ResourceRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRecords.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRecords proto.InternalMessageInfo

func (m *ResourceRecords) GetRecords() []*ResourceRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Header)(nil), "v1.Header")
	proto.RegisterType((*A)(nil), "v1.A")
	proto.RegisterType((*AAAA)(nil), "v1.AAAA")
	proto.RegisterType((*AFSDB)(nil), "v1.AFSDB")
	proto.RegisterType((*AVC)(nil), "v1.AVC")
	proto.RegisterType((*CAA)(nil), "v1.CAA")
	proto.RegisterType((*CDNSKEY)(nil), "v1.CDNSKEY")
	proto.RegisterType((*CDS)(nil), "v1.CDS")
	proto.RegisterType((*CERT)(nil), "v1.CERT")
	proto.RegisterType((*CNAME)(nil), "v1.CNAME")
	proto.RegisterType((*CSYNC)(nil), "v1.CSYNC")
	proto.RegisterType((*DHCID)(nil), "v1.DHCID")
	proto.RegisterType((*DLV)(nil), "v1.DLV")
	proto.RegisterType((*DNAME)(nil), "v1.DNAME")
	proto.RegisterType((*DNSKEY)(nil), "v1.DNSKEY")
	proto.RegisterType((*DS)(nil), "v1.DS")
	proto.RegisterType((*EID)(nil), "v1.EID")
	proto.RegisterType((*EUI48)(nil), "v1.EUI48")
	proto.RegisterType((*EUI64)(nil), "v1.EUI64")
	proto.RegisterType((*GID)(nil), "v1.GID")
	proto.RegisterType((*GPOS)(nil), "v1.GPOS")
	proto.RegisterType((*HINFO)(nil), "v1.HINFO")
	proto.RegisterType((*HIP)(nil), "v1.HIP")
	proto.RegisterType((*KEY)(nil), "v1.KEY")
	proto.RegisterType((*KX)(nil), "v1.KX")
	proto.RegisterType((*L32)(nil), "v1.L32")
	proto.RegisterType((*L64)(nil), "v1.L64")
	proto.RegisterType((*LOC)(nil), "v1.LOC")
	proto.RegisterType((*LP)(nil), "v1.LP")
	proto.RegisterType((*MB)(nil), "v1.MB")
	proto.RegisterType((*MD)(nil), "v1.MD")
	proto.RegisterType((*MF)(nil), "v1.MF")
	proto.RegisterType((*MG)(nil), "v1.MG")
	proto.RegisterType((*MINFO)(nil), "v1.MINFO")
	proto.RegisterType((*MR)(nil), "v1.MR")
	proto.RegisterType((*MX)(nil), "v1.MX")
	proto.RegisterType((*NAPTR)(nil), "v1.NAPTR")
	proto.RegisterType((*NID)(nil), "v1.NID")
	proto.RegisterType((*NIMLOC)(nil), "v1.NIMLOC")
	proto.RegisterType((*NINFO)(nil), "v1.NINFO")
	proto.RegisterType((*NS)(nil), "v1.NS")
	proto.RegisterType((*NSAPPTR)(nil), "v1.NSAPPTR")
	proto.RegisterType((*NSEC)(nil), "v1.NSEC")
	proto.RegisterType((*NSEC3)(nil), "v1.NSEC3")
	proto.RegisterType((*NSEC3PARAM)(nil), "v1.NSEC3PARAM")
	proto.RegisterType((*OPENPGPKEY)(nil), "v1.OPENPGPKEY")
	proto.RegisterType((*OPT)(nil), "v1.OPT")
	proto.RegisterType((*PTR)(nil), "v1.PTR")
	proto.RegisterType((*PX)(nil), "v1.PX")
	proto.RegisterType((*RKEY)(nil), "v1.RKEY")
	proto.RegisterType((*RP)(nil), "v1.RP")
	proto.RegisterType((*RRSIG)(nil), "v1.RRSIG")
	proto.RegisterType((*RT)(nil), "v1.RT")
	proto.RegisterType((*SIG)(nil), "v1.SIG")
	proto.RegisterType((*SMIMEA)(nil), "v1.SMIMEA")
	proto.RegisterType((*SOA)(nil), "v1.SOA")
	proto.RegisterType((*SPF)(nil), "v1.SPF")
	proto.RegisterType((*SRV)(nil), "v1.SRV")
	proto.RegisterType((*SSHFP)(nil), "v1.SSHFP")
	proto.RegisterType((*TA)(nil), "v1.TA")
	proto.RegisterType((*TALINK)(nil), "v1.TALINK")
	proto.RegisterType((*TKEY)(nil), "v1.TKEY")
	proto.RegisterType((*TLSA)(nil), "v1.TLSA")
	proto.RegisterType((*TSIG)(nil), "v1.TSIG")
	proto.RegisterType((*TXT)(nil), "v1.TXT")
	proto.RegisterType((*UID)(nil), "v1.UID")
	proto.RegisterType((*UINFO)(nil), "v1.UINFO")
	proto.RegisterType((*URI)(nil), "v1.URI")
	proto.RegisterType((*X25)(nil), "v1.X25")
	proto.RegisterType((*ResourceRecord)(nil), "v1.ResourceRecord")
	proto.RegisterType((*ResourceRecords)(nil), "v1.ResourceRecords")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DNSServiceClient is the client API for DNSService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DNSServiceClient interface {
	PutRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error)
	PostRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error)
	GetRecord(ctx context.Context, in *Header, opts ...grpc.CallOption) (*ResourceRecords, error)
	DeleteRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error)
}

type dNSServiceClient struct {
	cc *grpc.ClientConn
}

func NewDNSServiceClient(cc *grpc.ClientConn) DNSServiceClient {
	return &dNSServiceClient{cc}
}

func (c *dNSServiceClient) PutRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error) {
	out := new(ResourceRecord)
	err := c.cc.Invoke(ctx, "/v1.DNSService/PutRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServiceClient) PostRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error) {
	out := new(ResourceRecord)
	err := c.cc.Invoke(ctx, "/v1.DNSService/PostRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServiceClient) GetRecord(ctx context.Context, in *Header, opts ...grpc.CallOption) (*ResourceRecords, error) {
	out := new(ResourceRecords)
	err := c.cc.Invoke(ctx, "/v1.DNSService/GetRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSServiceClient) DeleteRecord(ctx context.Context, in *ResourceRecord, opts ...grpc.CallOption) (*ResourceRecord, error) {
	out := new(ResourceRecord)
	err := c.cc.Invoke(ctx, "/v1.DNSService/DeleteRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DNSServiceServer is the server API for DNSService service.
type DNSServiceServer interface {
	PutRecord(context.Context, *ResourceRecord) (*ResourceRecord, error)
	PostRecord(context.Context, *ResourceRecord) (*ResourceRecord, error)
	GetRecord(context.Context, *Header) (*ResourceRecords, error)
	DeleteRecord(context.Context, *ResourceRecord) (*ResourceRecord, error)
}

func RegisterDNSServiceServer(s *grpc.Server, srv DNSServiceServer) {
	s.RegisterService(&_DNSService_serviceDesc, srv)
}

func _DNSService_PutRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).PutRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DNSService/PutRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).PutRecord(ctx, req.(*ResourceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSService_PostRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).PostRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DNSService/PostRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).PostRecord(ctx, req.(*ResourceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSService_GetRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Header)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).GetRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DNSService/GetRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).GetRecord(ctx, req.(*Header))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSService_DeleteRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceRecord)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSServiceServer).DeleteRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.DNSService/DeleteRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSServiceServer).DeleteRecord(ctx, req.(*ResourceRecord))
	}
	return interceptor(ctx, in, info, handler)
}

var _DNSService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.DNSService",
	HandlerType: (*DNSServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutRecord",
			Handler:    _DNSService_PutRecord_Handler,
		},
		{
			MethodName: "PostRecord",
			Handler:    _DNSService_PostRecord_Handler,
		},
		{
			MethodName: "GetRecord",
			Handler:    _DNSService_GetRecord_Handler,
		},
		{
			MethodName: "DeleteRecord",
			Handler:    _DNSService_DeleteRecord_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_api_dfce5a86421ba59f) }

var fileDescriptor_api_dfce5a86421ba59f = []byte{
	// 2877 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0xcd, 0x96, 0xdb, 0xc6,
	0xb1, 0x16, 0x01, 0x92, 0xa3, 0xe9, 0xd1, 0x8f, 0x0d, 0xcb, 0x12, 0xae, 0x6c, 0xcb, 0x23, 0x5c,
	0xdf, 0x6b, 0x59, 0xd7, 0x57, 0x3f, 0x9c, 0xd1, 0x44, 0x71, 0xe2, 0xd8, 0x18, 0x72, 0x7e, 0x68,
	0x91, 0x1c, 0x1a, 0xe0, 0xcc, 0x19, 0x27, 0xd9, 0xf4, 0x10, 0x4d, 0x10, 0x47, 0x20, 0x80, 0xd3,
	0x00, 0x69, 0x8e, 0x17, 0x39, 0x39, 0x59, 0x26, 0x27, 0xab, 0xec, 0xb2, 0xcb, 0x2a, 0x0f, 0x90,
	0x07, 0xc8, 0x43, 0x64, 0x99, 0x6d, 0xb2, 0xcd, 0x22, 0x4f, 0x90, 0x53, 0xd5, 0xdd, 0x6c, 0x90,
	0x52, 0x24, 0x5b, 0x0b, 0x79, 0x93, 0x5d, 0x57, 0x7d, 0xdd, 0xd5, 0xd5, 0x5f, 0x57, 0x55, 0xff,
	0x90, 0x75, 0x9a, 0x45, 0xf7, 0x32, 0x9e, 0x16, 0xa9, 0x65, 0xcc, 0x1e, 0xde, 0x7c, 0x37, 0x4c,
	0xd3, 0x30, 0x66, 0xf7, 0x69, 0x16, 0xdd, 0xa7, 0x49, 0x92, 0x16, 0xb4, 0x88, 0xd2, 0x24, 0x17,
	0x3d, 0x9c, 0x7b, 0xa4, 0x7e, 0xc8, 0x68, 0xc0, 0xb8, 0x65, 0x91, 0x6a, 0x42, 0x27, 0xcc, 0xae,
	0x6c, 0x56, 0xee, 0xac, 0x7b, 0xd8, 0xb6, 0xde, 0x20, 0x66, 0x51, 0xc4, 0xb6, 0xb1, 0x59, 0xb9,
	0x73, 0xd9, 0x83, 0xa6, 0xf3, 0x1e, 0xa9, 0xb8, 0x96, 0x4d, 0xd6, 0x68, 0x10, 0x70, 0x96, 0xe7,
	0xb2, 0xb7, 0x12, 0x9d, 0x4d, 0x52, 0x75, 0x5d, 0xf7, 0x45, 0x3d, 0x3e, 0x25, 0x35, 0x77, 0xdf,
	0x6f, 0xed, 0x42, 0x97, 0x7c, 0x7a, 0x56, 0x9c, 0x67, 0x62, 0xca, 0xcb, 0x9e, 0x12, 0xad, 0x9b,
	0xe4, 0xe2, 0x38, 0xcd, 0x0b, 0xf4, 0xc6, 0xc0, 0xd1, 0x0b, 0xd9, 0xb9, 0x41, 0x4c, 0xf7, 0xa4,
	0x89, 0x8e, 0xcd, 0x0b, 0xbb, 0xb2, 0x69, 0xde, 0x59, 0xf7, 0xa0, 0xe9, 0xb8, 0xc4, 0x6c, 0xba,
	0x2e, 0xac, 0x62, 0x14, 0xd3, 0x50, 0x9a, 0xc4, 0x36, 0x76, 0xa6, 0xa1, 0x34, 0x05, 0x4d, 0xeb,
	0x1a, 0xa9, 0xcd, 0x68, 0x3c, 0x65, 0xb6, 0x89, 0x3a, 0x21, 0x38, 0x5f, 0x93, 0xb5, 0x66, 0xab,
	0xe7, 0x3f, 0xd9, 0xfb, 0x0a, 0x3a, 0xc0, 0xd0, 0x5c, 0xda, 0x11, 0x02, 0x38, 0x86, 0xac, 0x0d,
	0x53, 0xc5, 0xc9, 0x42, 0xb6, 0xde, 0x25, 0xeb, 0x34, 0x0e, 0x53, 0x1e, 0x15, 0xe3, 0x09, 0x9a,
	0xbd, 0xec, 0x69, 0x05, 0xa0, 0xd9, 0xf4, 0x2c, 0x8e, 0x86, 0x4f, 0xd8, 0xb9, 0x5d, 0xc5, 0x49,
	0xb5, 0xc2, 0xc9, 0x89, 0xd9, 0x6c, 0xf9, 0xd6, 0x75, 0x52, 0x7f, 0xca, 0xce, 0x07, 0x0b, 0xef,
	0xa5, 0xb4, 0x6c, 0xda, 0x58, 0x35, 0x7d, 0x8b, 0x90, 0x20, 0x0a, 0x59, 0x5e, 0x0c, 0x80, 0x4a,
	0x31, 0x73, 0x49, 0x03, 0x56, 0x85, 0x24, 0xe7, 0x95, 0x92, 0xc3, 0x49, 0xb5, 0xb9, 0xe7, 0x0d,
	0x5e, 0x71, 0xd6, 0x4d, 0xb2, 0x31, 0x64, 0xbc, 0x88, 0x46, 0xd1, 0x90, 0x16, 0x8a, 0xc7, 0xb2,
	0x0a, 0x76, 0x02, 0x37, 0xb7, 0x2a, 0x76, 0x02, 0xda, 0xce, 0xfb, 0xa4, 0xd6, 0xec, 0xb9, 0xdd,
	0x3d, 0x98, 0xb4, 0xa0, 0x3c, 0x64, 0x85, 0x0c, 0x0f, 0x29, 0x39, 0xc7, 0xa4, 0xd6, 0xf4, 0xbf,
	0xea, 0x35, 0xa1, 0x43, 0xce, 0x78, 0x44, 0x63, 0xe5, 0x95, 0x90, 0xf4, 0xc6, 0x18, 0xe5, 0x8d,
	0xb9, 0x45, 0x08, 0xd8, 0xdf, 0x8d, 0x8a, 0x2e, 0xcd, 0x6c, 0x73, 0xd3, 0x04, 0x0e, 0xb4, 0x06,
	0xe6, 0x6d, 0x1d, 0x36, 0xdb, 0xad, 0x12, 0x19, 0x95, 0x25, 0x32, 0x72, 0x62, 0xb6, 0x3a, 0x27,
	0xaf, 0x79, 0x07, 0xc0, 0xab, 0x17, 0xb2, 0x31, 0x23, 0xf5, 0xef, 0x25, 0x1e, 0x39, 0x31, 0x5e,
	0x7b, 0x38, 0xde, 0x26, 0xe6, 0x5e, 0xbb, 0x05, 0x4b, 0x62, 0x49, 0x90, 0xa5, 0x51, 0xa2, 0xc8,
	0x58, 0xc8, 0xce, 0x6d, 0x52, 0xdb, 0x3b, 0x6e, 0x6f, 0x3f, 0x5e, 0xad, 0x2e, 0x55, 0x5d, 0x5d,
	0x44, 0x97, 0x9d, 0xed, 0x17, 0x74, 0xb9, 0x41, 0xcc, 0x83, 0x76, 0x0b, 0x8a, 0x42, 0x18, 0x05,
	0x72, 0x69, 0xd0, 0x74, 0x7e, 0x4e, 0xaa, 0x07, 0xfd, 0x23, 0x1f, 0x5c, 0x88, 0x69, 0x11, 0x15,
	0xd3, 0x40, 0x15, 0xc3, 0x85, 0x0c, 0x6b, 0x8f, 0xd3, 0x24, 0x14, 0xa0, 0x28, 0x28, 0x5a, 0x01,
	0x23, 0x69, 0x2c, 0x47, 0x8a, 0x8c, 0x58, 0xc8, 0xce, 0x47, 0xa4, 0x76, 0xd8, 0xee, 0xed, 0x1f,
	0xc1, 0xc4, 0xc3, 0x6c, 0x2a, 0x2d, 0x43, 0xd3, 0xba, 0x42, 0x8c, 0x34, 0x97, 0xd6, 0x8c, 0x34,
	0x77, 0xfe, 0x5a, 0x21, 0xe6, 0x61, 0xbb, 0x0f, 0x93, 0x8d, 0xa3, 0xa2, 0xc3, 0x92, 0xb0, 0x18,
	0x4b, 0x47, 0xb5, 0xc2, 0xba, 0x47, 0xac, 0xc5, 0x8e, 0xb9, 0x2b, 0xfb, 0xf1, 0x1c, 0xc4, 0xba,
	0x43, 0xae, 0xf6, 0x95, 0x56, 0xda, 0x14, 0xbb, 0xb3, 0xaa, 0x06, 0x0f, 0xc7, 0x91, 0xda, 0x1f,
	0x68, 0x2e, 0x87, 0x4b, 0x6d, 0x25, 0x5c, 0xac, 0x8f, 0xc9, 0x9b, 0x1e, 0x4b, 0x02, 0xf6, 0xcd,
	0x2c, 0x9d, 0xe6, 0x3e, 0xe3, 0x33, 0xc6, 0x73, 0xbb, 0x8e, 0xa5, 0xf9, 0x59, 0x00, 0x52, 0xed,
	0xf5, 0x47, 0xf4, 0x2e, 0x31, 0x9e, 0x9c, 0x42, 0x6c, 0x66, 0x9c, 0x8d, 0x18, 0x67, 0xc9, 0x50,
	0x9d, 0x3a, 0x25, 0x0d, 0xd8, 0x60, 0xf3, 0xe1, 0x98, 0x26, 0x21, 0xe3, 0x6a, 0x77, 0x17, 0x0a,
	0xa7, 0x49, 0xcc, 0xce, 0x56, 0xe3, 0xdb, 0x18, 0xe9, 0xa4, 0x43, 0x5a, 0xa4, 0x7c, 0xab, 0xa1,
	0x8c, 0x2c, 0x14, 0x68, 0x64, 0x67, 0xfb, 0x3b, 0x18, 0xd9, 0xd9, 0x46, 0x23, 0x55, 0x4f, 0x2b,
	0x9c, 0x3f, 0x57, 0x88, 0xd9, 0x39, 0x6a, 0x42, 0x90, 0x9f, 0x30, 0x9e, 0x47, 0x69, 0xa2, 0x8e,
	0x50, 0x29, 0x42, 0xf1, 0xf5, 0xa3, 0x6f, 0x98, 0xe4, 0x10, 0xdb, 0xc0, 0xed, 0x61, 0xca, 0xa3,
	0x6f, 0xfa, 0x5c, 0xe5, 0xe5, 0x42, 0x96, 0x96, 0x0a, 0x80, 0xaa, 0x0b, 0x4b, 0x20, 0xc2, 0xa8,
	0x8e, 0xca, 0x86, 0x9a, 0x18, 0xd5, 0x29, 0x65, 0x43, 0x67, 0x91, 0x0d, 0x75, 0xb1, 0x23, 0x9d,
	0x72, 0x36, 0xb8, 0x2a, 0x1b, 0xd6, 0xc4, 0x48, 0x25, 0x3b, 0x8f, 0x89, 0xd1, 0xe9, 0x83, 0x97,
	0xfb, 0x5f, 0xb6, 0x7a, 0xea, 0xca, 0x01, 0xed, 0x15, 0x66, 0x8c, 0x55, 0x66, 0x9c, 0x6b, 0xc4,
	0xe8, 0xee, 0x42, 0xca, 0x4c, 0xce, 0xe4, 0x38, 0x63, 0x72, 0x86, 0xda, 0x16, 0x6a, 0x83, 0x85,
	0x36, 0x40, 0xed, 0x3e, 0x6a, 0x47, 0x0b, 0xed, 0x08, 0xb5, 0x07, 0xa8, 0x0d, 0x17, 0xda, 0xd0,
	0xd9, 0x22, 0xb5, 0x2e, 0xe6, 0xe7, 0x35, 0x52, 0xe3, 0x13, 0x1a, 0xc5, 0x12, 0x13, 0x02, 0x68,
	0x19, 0x6a, 0xc5, 0x8e, 0x0a, 0x01, 0x4d, 0x79, 0x68, 0x8a, 0x2f, 0x4c, 0x71, 0x67, 0x9b, 0x18,
	0xdd, 0x97, 0x07, 0x1b, 0x8c, 0x9a, 0xab, 0xac, 0x9f, 0xcc, 0x9d, 0x3f, 0x56, 0x48, 0xad, 0xe7,
	0xf6, 0x07, 0x1e, 0xcc, 0x95, 0xf2, 0x80, 0x71, 0x95, 0x1a, 0x28, 0xbc, 0x8c, 0x18, 0x9d, 0x50,
	0xf2, 0x4e, 0x23, 0x12, 0x0a, 0x6e, 0x59, 0x8c, 0xcf, 0xa2, 0x21, 0x93, 0x49, 0xa1, 0x44, 0x28,
	0xc4, 0x9c, 0x85, 0x6c, 0x9e, 0xc9, 0x84, 0x96, 0x12, 0x9c, 0xec, 0x9c, 0x65, 0x31, 0x1d, 0xb2,
	0x09, 0x4b, 0x0a, 0xdc, 0xd6, 0x75, 0xaf, 0xac, 0x72, 0x3e, 0x25, 0x66, 0xaf, 0xdd, 0x7a, 0xe9,
	0x02, 0xaf, 0x93, 0x7a, 0x92, 0x06, 0x2c, 0x0a, 0x64, 0x00, 0x4b, 0xc9, 0x71, 0x48, 0xbd, 0xd7,
	0xee, 0xca, 0xf8, 0x8d, 0x45, 0x50, 0xab, 0x5b, 0xa2, 0x14, 0xe1, 0x68, 0xec, 0xe1, 0x6e, 0x5c,
	0x27, 0xf5, 0x9f, 0xfa, 0x2d, 0x77, 0xe0, 0xca, 0xbb, 0x9e, 0x94, 0x80, 0xf9, 0x9e, 0x0f, 0x1c,
	0x26, 0xea, 0x86, 0x69, 0x24, 0xb9, 0xf3, 0x0e, 0x59, 0xeb, 0xf9, 0x6e, 0x1f, 0x48, 0x7c, 0x83,
	0x98, 0x59, 0xa1, 0xec, 0x42, 0xd3, 0xd9, 0x27, 0xd5, 0x9e, 0xbf, 0xd7, 0x04, 0xbf, 0x13, 0x36,
	0x2f, 0x5a, 0xe9, 0x84, 0x46, 0x89, 0xec, 0x50, 0xd2, 0xac, 0x5c, 0x26, 0x8c, 0x67, 0x2e, 0x13,
	0x7f, 0x87, 0x8d, 0xf2, 0xf7, 0x9a, 0x5b, 0x10, 0xbf, 0x63, 0x9a, 0xab, 0xda, 0x8c, 0xed, 0x7f,
	0x7f, 0x41, 0x89, 0x0a, 0xc6, 0xc5, 0xd5, 0x5b, 0x9d, 0x8a, 0x5a, 0x03, 0x78, 0x4e, 0x63, 0x55,
	0xeb, 0x45, 0x0a, 0x96, 0x34, 0x30, 0x13, 0x48, 0x72, 0xab, 0xb0, 0x0d, 0x63, 0x60, 0x46, 0x39,
	0x46, 0xa4, 0x5f, 0x49, 0xb3, 0xb2, 0xce, 0xb5, 0x97, 0xac, 0xf3, 0xe2, 0x33, 0xeb, 0xfc, 0x75,
	0x85, 0x10, 0x5c, 0x67, 0xdf, 0xf5, 0xdc, 0xee, 0xf7, 0xbb, 0x58, 0xe7, 0x2e, 0x21, 0x47, 0xfd,
	0xbd, 0x5e, 0xff, 0xa0, 0x0f, 0x87, 0xc7, 0x52, 0xb1, 0xaf, 0xac, 0x16, 0xfb, 0x1a, 0x31, 0x8f,
	0xfa, 0x03, 0x38, 0xe8, 0x9f, 0x1f, 0x08, 0x27, 0xc4, 0xe8, 0x9f, 0x7e, 0x9b, 0xf0, 0x9d, 0xd0,
	0xec, 0x71, 0x43, 0x15, 0x71, 0x29, 0x41, 0xd0, 0x4e, 0x68, 0x36, 0xdf, 0x7e, 0xf0, 0x40, 0x66,
	0x9a, 0x12, 0x9d, 0x82, 0x54, 0xbd, 0xd7, 0x7f, 0xb4, 0xdd, 0x25, 0x86, 0x87, 0xa5, 0x74, 0x72,
	0x96, 0xce, 0x55, 0x29, 0x85, 0xb6, 0x7a, 0x24, 0xa9, 0x77, 0xcf, 0xbc, 0x70, 0x7e, 0x6b, 0x90,
	0x9a, 0xe7, 0xf9, 0xed, 0x03, 0xc8, 0x72, 0xd8, 0xea, 0x66, 0x3a, 0x63, 0x9c, 0xa9, 0x6b, 0x50,
	0x59, 0xf5, 0x92, 0x6b, 0xde, 0x75, 0x52, 0x8f, 0xe9, 0x19, 0x8b, 0xd5, 0xfe, 0x4a, 0x09, 0xd8,
	0x49, 0x79, 0x14, 0xc2, 0xab, 0x51, 0x1e, 0x24, 0x52, 0x04, 0xbe, 0xd9, 0x3c, 0x8b, 0x44, 0x10,
	0xc8, 0xa3, 0xa4, 0xa4, 0x81, 0xf9, 0xa2, 0x64, 0xc8, 0x32, 0x84, 0xe5, 0x61, 0xb2, 0x50, 0xc8,
	0xcb, 0x28, 0x3c, 0xe3, 0xd6, 0x16, 0x97, 0x51, 0x78, 0xc9, 0x41, 0x2c, 0x45, 0x61, 0xc2, 0x78,
	0x0f, 0x5e, 0x8b, 0x17, 0x45, 0x90, 0x6b, 0x0d, 0x58, 0xf5, 0xa3, 0x30, 0xa1, 0xc5, 0x94, 0x33,
	0x7b, 0x5d, 0x70, 0xb7, 0x50, 0xc0, 0x31, 0xe4, 0x0d, 0x5e, 0x1a, 0x09, 0x10, 0xf9, 0x69, 0xae,
	0x88, 0xc4, 0xb6, 0xf3, 0x1b, 0x83, 0x98, 0xff, 0xe1, 0x51, 0xf1, 0xf8, 0xcb, 0x0a, 0xa9, 0xfb,
	0xdd, 0x76, 0x77, 0xcf, 0x85, 0xe0, 0x9f, 0xe6, 0x34, 0x54, 0x3c, 0x0a, 0x01, 0x82, 0x3f, 0x67,
	0x31, 0x1b, 0x42, 0xa9, 0x97, 0xc1, 0xaf, 0x64, 0xcb, 0x21, 0x97, 0x26, 0xb4, 0x18, 0x8e, 0xa3,
	0x24, 0x2c, 0xbd, 0x19, 0x96, 0x74, 0xab, 0xcf, 0xcd, 0xea, 0x33, 0xcf, 0x4d, 0xe7, 0x0f, 0x15,
	0x62, 0xfa, 0x47, 0xee, 0xea, 0x91, 0xb0, 0x48, 0x0c, 0xa3, 0x94, 0x18, 0xfa, 0x71, 0x69, 0x2e,
	0x3d, 0x2e, 0x6d, 0xb2, 0xc6, 0xd9, 0x88, 0xb3, 0x5c, 0x55, 0x25, 0x25, 0xe2, 0xa5, 0x80, 0x15,
	0xfc, 0x5c, 0xf2, 0x2d, 0x04, 0xb0, 0x83, 0xc4, 0xab, 0xcb, 0x8f, 0x94, 0xb0, 0x74, 0x44, 0x09,
	0xec, 0x9d, 0x24, 0x59, 0x48, 0x50, 0x91, 0xfc, 0xfe, 0xfe, 0x73, 0x3e, 0x2f, 0x18, 0x31, 0x7d,
	0xef, 0x44, 0x94, 0x88, 0x08, 0x22, 0xe3, 0x5c, 0xd2, 0xb7, 0x90, 0xc1, 0xe6, 0xd7, 0x2c, 0x0a,
	0xc7, 0x85, 0xe4, 0x4f, 0x4a, 0xb0, 0xbe, 0x2c, 0xe5, 0x85, 0x5c, 0x09, 0xb6, 0x4b, 0xef, 0xc9,
	0xea, 0xd2, 0x7b, 0xf2, 0x67, 0xa4, 0xe6, 0xfb, 0x87, 0xfb, 0xfd, 0xe5, 0x98, 0xac, 0xac, 0xc6,
	0xa4, 0x7a, 0xb9, 0x1b, 0xfa, 0xe5, 0x0e, 0x1b, 0x30, 0x8a, 0xe0, 0x1a, 0x9c, 0x71, 0x78, 0x9a,
	0xc9, 0xf7, 0x7e, 0x49, 0x05, 0x8f, 0xc6, 0x81, 0xfb, 0x9a, 0x1f, 0x8d, 0x87, 0xa4, 0x3e, 0x70,
	0x3b, 0xed, 0xde, 0x13, 0x08, 0xa2, 0x8c, 0xb3, 0x59, 0x94, 0x4e, 0xf3, 0x9e, 0xfe, 0xc5, 0x5a,
	0xd2, 0x01, 0xbd, 0x70, 0xfc, 0xf5, 0x4a, 0xff, 0x4a, 0x4a, 0x76, 0xfe, 0x59, 0x21, 0xd5, 0x81,
	0x3c, 0x5a, 0x96, 0xa9, 0x59, 0x5f, 0x29, 0xc5, 0x3a, 0xb9, 0x8c, 0xd5, 0xe4, 0x5a, 0x4e, 0x4d,
	0xf3, 0x99, 0xd4, 0x84, 0x58, 0x4c, 0x83, 0xc5, 0x97, 0x08, 0xb4, 0xf1, 0x62, 0xc9, 0x79, 0xca,
	0x55, 0x64, 0xa1, 0x00, 0x91, 0xf8, 0x94, 0x9d, 0xe3, 0x15, 0x5e, 0x84, 0x96, 0x12, 0x21, 0x78,
	0x9e, 0xb2, 0x73, 0x79, 0x9c, 0x43, 0x13, 0x96, 0x95, 0x16, 0x63, 0xc6, 0x3b, 0x2c, 0xc1, 0xc4,
	0xbd, 0xec, 0x2d, 0x64, 0xf0, 0x17, 0xdb, 0x2d, 0x5a, 0x50, 0x95, 0xb6, 0x0b, 0x85, 0xf3, 0x0b,
	0x52, 0x1d, 0x74, 0xfc, 0xef, 0x2f, 0x67, 0xff, 0x01, 0xa4, 0x43, 0x15, 0x7d, 0x31, 0xe9, 0x70,
	0x51, 0x89, 0x26, 0x0c, 0xca, 0x0d, 0x53, 0x97, 0xc9, 0x92, 0x06, 0xcf, 0xdb, 0x69, 0x10, 0x2a,
	0x2f, 0x84, 0x00, 0x14, 0x76, 0xdd, 0x26, 0x52, 0x28, 0x93, 0x59, 0x8a, 0x40, 0x61, 0xd7, 0x6d,
	0xca, 0xeb, 0x05, 0x34, 0x21, 0xbe, 0xa0, 0xbc, 0xb6, 0x5b, 0x2a, 0x91, 0x85, 0xa4, 0x37, 0x67,
	0xad, 0xbc, 0x39, 0xaf, 0x4e, 0xf8, 0x0d, 0x62, 0x0e, 0x4e, 0x07, 0xcf, 0x29, 0x00, 0x37, 0x88,
	0x79, 0x2c, 0x3e, 0x25, 0xa6, 0xfa, 0x53, 0x62, 0x1a, 0x05, 0xce, 0x7b, 0xa4, 0x76, 0xac, 0x9e,
	0x25, 0xd3, 0x28, 0x19, 0xa5, 0xea, 0x59, 0x82, 0x82, 0xf3, 0x25, 0x31, 0x8f, 0xbd, 0xf6, 0x2b,
	0x15, 0x0e, 0x5d, 0x24, 0xcc, 0xa5, 0x22, 0xf1, 0x21, 0x31, 0x4f, 0x1b, 0x8f, 0x60, 0xf7, 0xfa,
	0x7e, 0xab, 0xe7, 0x2e, 0xfd, 0xe2, 0x96, 0x55, 0xce, 0xef, 0xdf, 0x24, 0x57, 0x3c, 0x96, 0xa7,
	0x53, 0x3e, 0x64, 0x1e, 0x1b, 0xa6, 0x3c, 0xb0, 0x1c, 0x52, 0x1f, 0xe3, 0x6f, 0x32, 0xf6, 0xdf,
	0x68, 0x90, 0x7b, 0xb3, 0x87, 0xf7, 0xc4, 0xff, 0xb2, 0x27, 0x11, 0xeb, 0x6d, 0x52, 0xa1, 0xe8,
	0xca, 0x46, 0xa3, 0x06, 0xb0, 0x7b, 0x78, 0xc1, 0xab, 0x50, 0xeb, 0x16, 0xa9, 0x52, 0x4a, 0x29,
	0x3a, 0xb3, 0xd1, 0xb8, 0x88, 0x88, 0xeb, 0x02, 0x88, 0x7a, 0xeb, 0x36, 0xa9, 0xd1, 0x51, 0x1e,
	0x9c, 0xe1, 0x66, 0x6e, 0x34, 0xd6, 0xb1, 0xc3, 0xbe, 0xdf, 0xda, 0x3d, 0xbc, 0xe0, 0x09, 0xc4,
	0x7a, 0x87, 0x98, 0x74, 0x36, 0xc4, 0x7d, 0xdd, 0x68, 0xac, 0x61, 0x87, 0x93, 0xe6, 0xe1, 0x05,
	0x0f, 0xb4, 0x00, 0x0e, 0x29, 0xc5, 0xfd, 0x95, 0x60, 0x13, 0xad, 0x83, 0xd6, 0xfa, 0x90, 0xac,
	0x0d, 0x83, 0x24, 0x57, 0x89, 0xb5, 0xd1, 0xd8, 0xc0, 0x0e, 0xe2, 0xf3, 0xed, 0xf0, 0x82, 0xa7,
	0x50, 0xb4, 0x12, 0xe4, 0xb8, 0xeb, 0xca, 0x4a, 0xcb, 0x47, 0x2b, 0x01, 0xdc, 0x6b, 0xab, 0x10,
	0xdd, 0xb8, 0xed, 0x72, 0x09, 0xcd, 0x3d, 0x6f, 0x00, 0x4b, 0x00, 0x3d, 0x2c, 0x61, 0x88, 0x9f,
	0xda, 0x44, 0x2f, 0x01, 0xbf, 0x43, 0x61, 0x09, 0x88, 0x60, 0x97, 0xfc, 0x3c, 0x19, 0xda, 0x1b,
	0xa5, 0x2e, 0xfe, 0x57, 0xbd, 0x26, 0x76, 0x01, 0x04, 0xba, 0x04, 0xe3, 0x61, 0x14, 0xd8, 0x97,
	0x74, 0x17, 0xfc, 0xdc, 0x84, 0x2e, 0x88, 0x80, 0x97, 0x41, 0x3c, 0xb3, 0x2f, 0x6b, 0x2f, 0x5b,
	0x9d, 0x13, 0xf0, 0x32, 0x88, 0x67, 0x38, 0x1e, 0xbd, 0xb8, 0x52, 0x1a, 0xaf, 0xbc, 0x40, 0xc4,
	0xfa, 0x80, 0xd4, 0x25, 0x1b, 0x57, 0xf5, 0x36, 0x2e, 0xc8, 0x90, 0x98, 0x65, 0x13, 0x23, 0xc8,
	0xed, 0x37, 0xb0, 0x47, 0x1d, 0x7b, 0x00, 0x13, 0x46, 0x90, 0xc3, 0xfc, 0xf0, 0xec, 0x7b, 0x53,
	0xcf, 0xbf, 0x87, 0xee, 0x81, 0x16, 0xe6, 0x67, 0xd3, 0x68, 0xfb, 0xb1, 0x6d, 0xe9, 0xf9, 0xf1,
	0x5b, 0x0f, 0xe6, 0x47, 0x44, 0x76, 0xd9, 0xd9, 0xb6, 0xdf, 0x5a, 0xea, 0xb2, 0xb3, 0x2d, 0xbb,
	0xec, 0x6c, 0xc3, 0x14, 0x61, 0x14, 0xd8, 0xd7, 0xf4, 0x14, 0x07, 0x62, 0x8a, 0x30, 0x0a, 0x60,
	0x23, 0xc2, 0x2c, 0xcd, 0xed, 0xb7, 0xf5, 0x46, 0x1c, 0xf4, 0x8f, 0xc0, 0x3b, 0xd4, 0x83, 0xfd,
	0x31, 0xe6, 0xd2, 0x75, 0x6d, 0x1f, 0x3f, 0xe7, 0xc0, 0x3e, 0x22, 0x60, 0x7f, 0x1c, 0x65, 0xf6,
	0x0d, 0x6d, 0xff, 0xb0, 0xdd, 0x07, 0xfb, 0xe3, 0x28, 0x03, 0x10, 0xc8, 0xb1, 0x35, 0x28, 0x98,
	0x31, 0x25, 0x2d, 0x4f, 0xe7, 0xf6, 0x7f, 0x69, 0x5a, 0x9e, 0x9c, 0x02, 0x2d, 0x4f, 0xe7, 0x30,
	0x2c, 0xde, 0x6a, 0xd8, 0x37, 0xf5, 0xb0, 0xce, 0x56, 0x03, 0x86, 0xc5, 0x5b, 0x0d, 0x04, 0x77,
	0xb6, 0xed, 0x77, 0x4a, 0x20, 0xae, 0x17, 0xb4, 0x08, 0xa6, 0x43, 0xfb, 0xdd, 0x12, 0x78, 0x84,
	0x91, 0x1d, 0xa7, 0x43, 0x98, 0x30, 0xce, 0xec, 0xf7, 0xf4, 0x84, 0x1d, 0x70, 0xd4, 0x88, 0x33,
	0x40, 0x26, 0x67, 0xf6, 0x2d, 0x8d, 0x74, 0x21, 0x5b, 0x8c, 0xc9, 0x19, 0x22, 0x81, 0xfd, 0x7e,
	0x09, 0x69, 0x21, 0x12, 0x20, 0x32, 0xb2, 0x37, 0x4b, 0xc8, 0x3e, 0x22, 0x23, 0x44, 0x42, 0xfb,
	0x76, 0x09, 0x39, 0x40, 0x24, 0x04, 0x3e, 0x27, 0xc8, 0xa7, 0xa3, 0xf9, 0xec, 0x2a, 0x3e, 0x11,
	0xc1, 0xc1, 0xdc, 0xfe, 0xef, 0xd2, 0x60, 0x0f, 0x07, 0x73, 0x44, 0xe6, 0xf6, 0x07, 0x25, 0x04,
	0xf9, 0x9a, 0xcc, 0xc1, 0x6c, 0x42, 0xe1, 0xed, 0xf6, 0x3f, 0xda, 0x2c, 0xfe, 0x90, 0x80, 0x59,
	0x44, 0x80, 0x98, 0x24, 0x0a, 0xec, 0xff, 0xd5, 0xc4, 0xf4, 0x44, 0x18, 0x24, 0x51, 0x00, 0x61,
	0x9c, 0x44, 0x13, 0x20, 0xee, 0x43, 0x1d, 0xc6, 0xe2, 0xeb, 0x01, 0xc2, 0x58, 0x60, 0x38, 0x0b,
	0x3a, 0x7f, 0xa7, 0x34, 0x8b, 0x72, 0x3e, 0x51, 0xce, 0x27, 0xb9, 0xfd, 0x91, 0x76, 0xb1, 0x87,
	0x91, 0x9e, 0xe4, 0x50, 0x38, 0x92, 0x9c, 0x66, 0xe0, 0xe4, 0x5d, 0x5d, 0x38, 0xe4, 0x1f, 0x04,
	0x14, 0x0e, 0x89, 0x42, 0x48, 0x26, 0x39, 0x1b, 0xda, 0xff, 0xa7, 0x43, 0x12, 0xde, 0xd6, 0x10,
	0x92, 0xa0, 0x47, 0x2f, 0x72, 0x36, 0xdc, 0xb2, 0x3f, 0x2e, 0x79, 0x01, 0x8f, 0x6f, 0xf4, 0x02,
	0x10, 0xeb, 0x01, 0x21, 0xd8, 0xc8, 0x28, 0xa7, 0x13, 0xfb, 0xff, 0xb1, 0xdf, 0x95, 0x45, 0x3f,
	0x7c, 0xa4, 0x1f, 0x5e, 0xf0, 0x4a, 0x7d, 0x60, 0x44, 0x9a, 0xb1, 0x24, 0x0b, 0x33, 0x08, 0xd7,
	0x7b, 0x7a, 0x84, 0x7e, 0x4a, 0xc3, 0x08, 0xdd, 0x07, 0xf8, 0x4c, 0xb3, 0xc2, 0xbe, 0xaf, 0xf9,
	0x3c, 0xea, 0x43, 0x01, 0x03, 0x2d, 0x80, 0xb0, 0xd0, 0x07, 0x1a, 0x14, 0x8b, 0x04, 0x2d, 0x70,
	0x94, 0xcd, 0xed, 0x87, 0x9a, 0xa3, 0x3e, 0x6e, 0x63, 0x36, 0x87, 0xa5, 0x73, 0x98, 0xbf, 0xa1,
	0x97, 0xee, 0x89, 0x99, 0x51, 0x0f, 0x23, 0x79, 0x66, 0x6f, 0xe9, 0x91, 0x1e, 0xc6, 0x2f, 0xcf,
	0x80, 0x14, 0xce, 0xf3, 0x28, 0xb4, 0xb7, 0x35, 0x29, 0xf8, 0x7c, 0x05, 0x52, 0x10, 0xc1, 0xc1,
	0x85, 0xfd, 0xa8, 0x34, 0x78, 0x80, 0x83, 0xd1, 0x5b, 0x18, 0xba, 0xa3, 0xbd, 0x15, 0x03, 0x41,
	0x0b, 0xa1, 0x91, 0x4f, 0xa2, 0x09, 0xa3, 0xf6, 0x0f, 0x74, 0x68, 0x88, 0x17, 0x0c, 0x84, 0x86,
	0xc0, 0xd0, 0x44, 0x4a, 0xed, 0xc7, 0x25, 0x13, 0x47, 0x78, 0x66, 0xe4, 0xa9, 0x00, 0xb3, 0x91,
	0xfd, 0xc3, 0x12, 0xd8, 0xdf, 0x47, 0x30, 0x1b, 0x21, 0xc8, 0x67, 0xf6, 0x27, 0x25, 0xd0, 0xc3,
	0x0a, 0x9c, 0x73, 0xac, 0xc0, 0x79, 0x3e, 0x1e, 0x65, 0xf6, 0x8f, 0xf4, 0xb2, 0xf0, 0x5e, 0x0e,
	0xcb, 0x42, 0x04, 0x96, 0x55, 0x50, 0xfb, 0xc7, 0x7a, 0x59, 0x03, 0x98, 0xd7, 0x28, 0x28, 0x78,
	0x5e, 0xd0, 0x38, 0x4a, 0x9e, 0xda, 0x9f, 0x6a, 0xcf, 0xc5, 0x25, 0x18, 0x3c, 0x17, 0x18, 0x70,
	0x5e, 0x00, 0xe7, 0x3f, 0xd1, 0x9c, 0x0f, 0x24, 0xe7, 0xa0, 0x47, 0x3c, 0xce, 0xa9, 0xfd, 0x59,
	0x09, 0xef, 0xf8, 0x78, 0xda, 0x82, 0x1e, 0x71, 0x60, 0xef, 0xf3, 0x12, 0x2e, 0xe8, 0x43, 0x3d,
	0xac, 0x0f, 0x6e, 0x30, 0xae, 0x5e, 0xdf, 0xe0, 0x14, 0xe3, 0xa4, 0x98, 0x23, 0xf3, 0x70, 0x8b,
	0xd9, 0xd5, 0xe0, 0xb1, 0x48, 0xca, 0xa9, 0x28, 0xff, 0xe2, 0x1e, 0xd3, 0xd4, 0x8b, 0x3f, 0x56,
	0xe9, 0x36, 0x55, 0xb5, 0x77, 0xca, 0x23, 0xbb, 0x55, 0x1a, 0xef, 0xb5, 0x71, 0x3c, 0x8f, 0x00,
	0x9c, 0x37, 0x1e, 0xd9, 0x7b, 0x1a, 0x3c, 0x6d, 0x3c, 0x02, 0x70, 0xde, 0x78, 0xb4, 0x7b, 0x91,
	0xd4, 0x39, 0xde, 0x44, 0x9c, 0xcf, 0xc8, 0xd5, 0xe5, 0xbb, 0x49, 0x6e, 0x7d, 0x0c, 0xaf, 0x3b,
	0x6c, 0xe2, 0xcd, 0x6b, 0xa3, 0x61, 0x61, 0xbc, 0x2c, 0xf5, 0xf2, 0x54, 0x97, 0xc6, 0x9f, 0x0c,
	0x42, 0x5a, 0x3d, 0xdf, 0x97, 0xbf, 0xa5, 0x5f, 0x90, 0xf5, 0xfe, 0xb4, 0x90, 0xd7, 0x9c, 0xe7,
	0x0c, 0xbc, 0xf9, 0x1c, 0x9d, 0xf3, 0xf6, 0xaf, 0xfe, 0xf2, 0xb7, 0xdf, 0x19, 0x57, 0x6f, 0x92,
	0xfb, 0xb3, 0x87, 0xf7, 0x85, 0xe1, 0x4f, 0x2a, 0x77, 0xad, 0x27, 0x84, 0xf4, 0xd3, 0xfc, 0x15,
	0x8d, 0x39, 0x2b, 0xc6, 0x3e, 0x27, 0xeb, 0x07, 0x4c, 0xd9, 0x2a, 0xdd, 0xb7, 0x6e, 0xbe, 0xf5,
	0xac, 0x8d, 0xdc, 0xb1, 0xd0, 0xc8, 0x25, 0xab, 0x64, 0xc4, 0xfa, 0x82, 0x5c, 0x6a, 0xb1, 0x98,
	0x15, 0xec, 0x3b, 0x3a, 0x24, 0x6d, 0xdd, 0x2d, 0xd9, 0x3a, 0xab, 0xe3, 0x97, 0xd6, 0xd6, 0xbf,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x75, 0xa6, 0x68, 0x84, 0x20, 0x00, 0x00,
}
